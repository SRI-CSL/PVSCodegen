(typed_reduction_props
 (typed_reduce_n_TCC1 0
  (typed_reduce_n_TCC1-1 nil 3703351555 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IContext type-decl nil IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cpure? def-decl "bool" IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (below type-eq-decl nil nat_types nil)
    (IExpression type-decl nil IExpression_adt nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (refs def-decl "bool" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil
   (typed_reduce_n subtype "typed_rreduction.i"
    "below[typed_rreduction.state`stack`length]")))
 (typed_reduce_n_TCC2 0
  (typed_reduce_n_TCC2-1 nil 3703351555
   ("" (skeep* :preds? t)
    (("" (typepred "state`redex")
      (("" (split)
        (("1" (grind) nil nil)
         ("2" (skeep)
          (("2" (inst -3 "i-popDepth(state`redex)")
            (("1" (rewrite cvars_vars) (("1" (grind) nil nil)) nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((armc? def-decl "bool" preprocess nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (refcount const-decl "nat" rreduction nil)
    (Store type-eq-decl nil reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (mark def-decl "IExpression" preprocess nil)
    (contextPure? def-decl "bool" IL nil)
    (<= const-decl "bool" reals nil) (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (domainValue? const-decl "bool" IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (Stack type-eq-decl nil IL nil) (value? const-decl "bool" IL nil)
    (below type-eq-decl nil nat_types nil)
    (emptyset const-decl "set" sets nil)
    (markc def-decl "IContext" preprocess nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cpure? def-decl "bool" IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IContext type-decl nil IL nil) (refs def-decl "bool" IL nil)
    (IExpression type-decl nil IExpression_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (cvars_vars formula-decl nil preprocess nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (state skolem-const-decl "{rS: rstate |
   noDanglingRefs?(rS) AND
    allReleaseMarked?(rS`redex) AND armc?(rS`context)}"
     typed_reduction_props nil)
    (i skolem-const-decl "nat" typed_reduction_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil
   (typed_reduce_n subtype "typed_rreduction.stack_types"
    "{stypes | IL.popDepth(typed_rreduction.state`redex) <= typed_reduction.stypes`length AND FORALL i: preprocess.cvars(typed_rreduction.state`redex)(typed_reduction.i) IMPLIES typed_reduction.i < typed_reduction.stypes`length}")))
 (typed_reduce_n_TCC3 0
  (typed_reduce_n_TCC3-1 nil 3703351555
   ("" (skeep* :preds? t)
    (("" (typepred "state`redex") (("" (grind) nil nil)) nil)) nil)
   ((armc? def-decl "bool" preprocess nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (refcount const-decl "nat" rreduction nil)
    (Store type-eq-decl nil reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (mark def-decl "IExpression" preprocess nil)
    (contextPure? def-decl "bool" IL nil)
    (<= const-decl "bool" reals nil) (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (domainValue? const-decl "bool" IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (Stack type-eq-decl nil IL nil) (value? const-decl "bool" IL nil)
    (below type-eq-decl nil nat_types nil)
    (emptyset const-decl "set" sets nil)
    (markc def-decl "IContext" preprocess nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cpure? def-decl "bool" IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IContext type-decl nil IL nil) (refs def-decl "bool" IL nil)
    (IExpression type-decl nil IExpression_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vars_mark_type application-judgement "{C | vars(C) = vars(B)}"
     preprocess nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (bumpn const-decl "finite_set[nat]" IL nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil
   (typed_reduce_n subtype "IL.popDepth(typed_rreduction.state`redex)"
    "upto(typed_rreduction.stack_types`length)")))
 (typed_reduce_n_TCC4 0
  (typed_reduce_n_TCC4-1 nil 3703351555
   ("" (skeep* :preds? t)
    (("" (typepred "state`redex")
      (("" (split)
        (("1" (grind) nil nil)
         ("2" (skeep)
          (("2" (inst -4 "i-popDepth(state`context)")
            (("1" (rewrite cvars_vars_ctx)
              (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((armc? def-decl "bool" preprocess nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (refcount const-decl "nat" rreduction nil)
    (Store type-eq-decl nil reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (mark def-decl "IExpression" preprocess nil)
    (contextPure? def-decl "bool" IL nil)
    (<= const-decl "bool" reals nil) (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (domainValue? const-decl "bool" IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (Stack type-eq-decl nil IL nil) (value? const-decl "bool" IL nil)
    (below type-eq-decl nil nat_types nil)
    (emptyset const-decl "set" sets nil)
    (markc def-decl "IContext" preprocess nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (cpure? def-decl "bool" IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IContext type-decl nil IL nil) (refs def-decl "bool" IL nil)
    (IExpression type-decl nil IExpression_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (cvars_vars_ctx formula-decl nil preprocess nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vars_mark_type application-judgement "{C | vars(C) = vars(B)}"
     preprocess nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (state skolem-const-decl "{rS: rstate |
   noDanglingRefs?(rS) AND
    allReleaseMarked?(rS`redex) AND armc?(rS`context)}"
     typed_reduction_props nil)
    (i skolem-const-decl "nat" typed_reduction_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil
   (typed_reduce_n subtype
    "typed_reduction.popn(typed_rreduction.stack_types, IL.popDepth(typed_rreduction.state`redex))"
    "{stypes | IL.popDepth(typed_rreduction.state`context) <= typed_reduction.stypes`length AND FORALL i: preprocess.cvars(typed_rreduction.state`context)(typed_reduction.i) IMPLIES typed_reduction.i < typed_reduction.stypes`length}")))
 (typed_reduce_n_TCC5 0
  (typed_reduce_n_TCC5-1 nil 3703351555 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (IExpression type-decl nil IExpression_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (pure? def-decl "bool" IL nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (Definition type-eq-decl nil typed_reduction nil)
    (Defs type-eq-decl nil typed_reduction nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (defs_well_typed const-decl "boolean" typed_reduction nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unmark def-decl "IExpression" preprocess nil)
    (Definition type-eq-decl nil typed_reduction_props nil)
    (Defs type-eq-decl nil typed_reduction_props nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (IContext type-decl nil IL nil) (cpure? def-decl "bool" IL nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (refs def-decl "bool" IL nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil (typed_reduce_n subtype "n - 1" "nat")))
 (typed_reduce_n_TCC6 0
  (typed_reduce_n_TCC6-1 nil 3703351555 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (IExpression type-decl nil IExpression_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (pure? def-decl "bool" IL nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (Definition type-eq-decl nil typed_reduction nil)
    (Defs type-eq-decl nil typed_reduction nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (defs_well_typed const-decl "boolean" typed_reduction nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unmark def-decl "IExpression" preprocess nil)
    (Definition type-eq-decl nil typed_reduction_props nil)
    (Defs type-eq-decl nil typed_reduction_props nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (IContext type-decl nil IL nil) (cpure? def-decl "bool" IL nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (refs def-decl "bool" IL nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil))
   nil
   (typed_reduce_n subtype "trS"
    "{tS | NOT typed_rreduction.tS`state`error AND typed_reduction.defs_well_typed(D, typed_rreduction.tS`def_types)}")))
 (typed_reduce_n_TCC7 0
  (typed_reduce_n_TCC7-1 nil 3703351555
   ("" (skeep* :preds? t) (("" (rewrite typed_reduce_defs) nil nil))
    nil)
   ((typed_reduce_defs formula-decl nil typed_rreduction nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (IExpression type-decl nil IExpression_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (pure? def-decl "bool" IL nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (unmark def-decl "IExpression" preprocess nil)
    (Definition type-eq-decl nil typed_rreduction nil)
    (Defs type-eq-decl nil typed_rreduction nil)
    (Definition type-eq-decl nil typed_reduction_props nil)
    (Defs type-eq-decl nil typed_reduction_props nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (IContext type-decl nil IL nil) (cpure? def-decl "bool" IL nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (refs def-decl "bool" IL nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Definition type-eq-decl nil typed_reduction nil)
    (Defs type-eq-decl nil typed_reduction nil)
    (defs_well_typed const-decl "boolean" typed_reduction nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil
   (typed_reduce_n subtype "typed_rreduction.typed_reduce(D)(trS)"
    "{trS | typed_reduction.defs_well_typed(D, trS`def_types)}")))
 (typed_reduce_n_TCC8 0
  (typed_reduce_n_TCC8-1 nil 3703351555 ("" (termination-tcc) nil nil)
   nil nil
   (typed_reduce_n termination
    "typed_reduce_n(D)(n - 1, typed_rreduction.typed_reduce(D)(trS))"
    "nil")))
 (typed_reduce_n_state 0
  (typed_reduce_n_state-1 nil 3703356460
   ("" (induct n)
    (("1" (grind) nil nil)
     ("2" (skeep* :preds? t)
      (("2" (expand typed_reduce_n +)
        (("2" (expand rreduce_n +)
          (("2" (lift-if)
            (("2" (split)
              (("1" (propax) nil nil)
               ("2" (flatten)
                (("2" (rewrite -3)
                  (("2" (rewrite typed_reduce_state) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((typed_reduce const-decl "typed_rstate" typed_rreduction nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Defs type-eq-decl nil typed_rreduction nil)
    (Definition type-eq-decl nil typed_rreduction nil)
    (typed_reduce_state formula-decl nil typed_rreduction nil)
    (reduce_ndr application-judgement "(noDanglingRefs?)" rreduction
     nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (rreduce_n def-decl "rstate" reduction_props nil)
    (Defs type-eq-decl nil reduction_props nil)
    (Definition type-eq-decl nil reduction_props nil)
    (typed_reduce_n def-decl "typed_rstate" typed_reduction_props nil)
    (defs_well_typed const-decl "boolean" typed_reduction nil)
    (Defs type-eq-decl nil typed_reduction nil)
    (Definition type-eq-decl nil typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (below type-eq-decl nil naturalnumbers nil)
    (armc? def-decl "bool" preprocess nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (refcount const-decl "nat" rreduction nil)
    (Store type-eq-decl nil reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (mark def-decl "IExpression" preprocess nil)
    (contextPure? def-decl "bool" IL nil)
    (<= const-decl "bool" reals nil) (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (refs def-decl "bool" IL nil)
    (domainValue? const-decl "bool" IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (Stack type-eq-decl nil IL nil) (value? const-decl "bool" IL nil)
    (emptyset const-decl "set" sets nil)
    (markc def-decl "IContext" preprocess nil)
    (cpure? def-decl "bool" IL nil) (IContext type-decl nil IL nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (Defs type-eq-decl nil typed_reduction_props nil)
    (Definition type-eq-decl nil typed_reduction_props nil)
    (unmark def-decl "IExpression" preprocess nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (< const-decl "bool" reals nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (pure? def-decl "bool" IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IExpression type-decl nil IExpression_adt nil)
    (below type-eq-decl nil nat_types nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   shostak))
 (build_redex_match_type_TCC1 0
  (build_redex_match_type_TCC1-1 nil 3703437223
   ("" (subtype-tcc) nil nil) nil nil
   (build_redex_match_type subtype "stypes"
    "{stypes | IL.popDepth(A) <= typed_reduction.stypes`length AND FORALL i: preprocess.cvars(A)(typed_reduction.i) IMPLIES typed_reduction.i < typed_reduction.stypes`length}")))
 (build_redex_match_type_TCC2 0
  (build_redex_match_type_TCC2-1 nil 3703437223
   ("" (subtype-tcc) nil nil) nil nil
   (build_redex_match_type subtype "stypes2"
    "{stypes | IL.popDepth(B) <= typed_reduction.stypes`length AND FORALL i: preprocess.cvars(B)(typed_reduction.i) IMPLIES typed_reduction.i < typed_reduction.stypes`length}")))
 (build_redex_match_type 0
  (build_redex_match_type-2 nil 3706363138
   ("" (induct A)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (grind) nil nil)
     ("5" (skeep* :preds? t)
      (("5" (expand unmark -5)
        (("5" (expand translate_refs -5)
          (("5" (case "letexpr?(B)")
            (("1" (assert)
              (("1" (expand buildRedexType +)
                (("1" (expand is_well_typed (-11 -12))
                  (("1" (flatten)
                    (("1" (assert)
                      (("1" (case "value?(letexpr1_var)")
                        (("1" (case "value?(letrhs(B))")
                          (("1" (assert) nil nil)
                           ("2" (replace -7 :dir RL)
                            (("2" (simplify)
                              (("2"
                                (use translate_refs_value)
                                (("2" (use unmark_value) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (case "value?(letrhs(B))")
                          (("1" (replace -7 :dir RL)
                            (("1" (simplify)
                              (("1"
                                (hide-all-but (1 2 -1))
                                (("1"
                                  (generalize
                                   letexpr1_var
                                   letexpr1_var)
                                  (("1"
                                    (induct-and-simplify letexpr1_var)
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2"
                              (inst -2 "letrhs(B)" def_types def_types2
                               dom_types dom_types2 _ _ "lrhs(tA)"
                               translate)
                              (("2"
                                (inst? -2)
                                (("2"
                                  (inst? -2)
                                  (("2"
                                    (split -2)
                                    (("1"
                                      (replace -1)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2" (grind) nil nil)
                                     ("3" (grind) nil nil)
                                     ("4"
                                      (decompose-equality -5)
                                      nil
                                      nil)
                                     ("5" (grind) nil nil)
                                     ("6" (grind) nil nil)
                                     ("7" (grind) nil nil)
                                     ("8" (grind) nil nil)
                                     ("9" (grind) nil nil)
                                     ("10" (propax) nil nil)
                                     ("11" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (grind) nil nil) ("7" (grind) nil nil) ("8" (grind) nil nil)
     ("9" (grind) nil nil) ("10" (grind) nil nil)
     ("11" (skeep* :preds? t)
      (("11" (expand unmark -4)
        (("11" (expand translate_refs -4)
          (("11" (case "pop?(B)")
            (("1" (assert)
              (("1" (expand is_well_typed (-10 -11))
                (("1" (flatten)
                  (("1" (expand buildRedexType +)
                    (("1" (assert)
                      (("1" (case "value?(pop1_var)")
                        (("1" (case "value?(pbody(B))")
                          (("1" (assert) nil nil)
                           ("2" (decompose-equality -6)
                            (("2" (replace -1 :dir RL)
                              (("2"
                                (use translate_refs_value)
                                (("2" (use unmark_value) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (case "value?(pbody(B))")
                          (("1" (decompose-equality -6)
                            (("1" (replace -1 :dir RL)
                              (("1"
                                (expand buildRedex 2)
                                (("1"
                                  (assert)
                                  (("1"
                                    (hide-all-but (1 2 -2))
                                    (("1"
                                      (generalize pop1_var pop1_var)
                                      (("1"
                                        (induct-and-simplify pop1_var)
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2"
                              (inst -2 "pbody(B)" _ _ _ _ _ _
                               "ptbody(tA)" _)
                              (("2"
                                (inst?)
                                (("2"
                                  (inst?)
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (split -2)
                                      (("1"
                                        (replace -1)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2" (grind) nil nil)
                                       ("3" (grind) nil nil)
                                       ("4"
                                        (decompose-equality -4)
                                        nil
                                        nil)
                                       ("5"
                                        (expand buildRedex +)
                                        (("5" (propax) nil nil))
                                        nil)
                                       ("6" (grind) nil nil)
                                       ("7" (grind) nil nil)
                                       ("8" (grind) nil nil)
                                       ("9" (grind) nil nil)
                                       ("10" (propax) nil nil)
                                       ("11" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (grind) nil nil) ("13" (grind) nil nil)
     ("14" (delete 2) (("14" (grind) nil nil)) nil)
     ("15" (delete 2) (("15" (grind) nil nil)) nil))
    nil)
   ((contextPure? def-decl "bool" IL nil)
    (unmark def-decl "IExpression" preprocess nil)
    (translate_refs def-decl "IExpression" reduction_props nil)
    (buildRedex def-decl "{K, B | fill(K, B) = A}" IL nil)
    (fill def-decl "IExpression" IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IContext type-decl nil IL nil)
    (release? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (< const-decl "bool" reals nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IExpression type-decl nil IExpression_adt nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (tdef type-eq-decl nil typed_reduction_props nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (typeinfo_fill def-decl "typeinfo" typed_reduction nil)
    (buildRedexType def-decl "{tK, tB | typeinfo_fill(tK, tB) = tA}"
     typed_reduction nil)
    (IExpression_induction formula-decl nil IExpression_adt nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (singleton const-decl "(singleton?)" sets nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (emptyset const-decl "set" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (variable? adt-recognizer-decl "[IExpression -> boolean]"
               IExpression_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (unmarkvars_length rec-application-judgement
     "{J | length(J) = length(L)}" preprocess nil)
    (in_varlist const-decl "finite_set[nat]" IL nil)
    (letexpr? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (value? const-decl "bool" IL nil)
    (translate_refs_value judgement-tcc nil reduction_props nil)
    (letexpr1_var skolem-const-decl "IExpression" typed_reduction_props
     nil)
    (unmark_value judgement-tcc nil preprocess nil)
    (letrhs adt-accessor-decl "[(letexpr?) -> IExpression]"
     IExpression_adt nil)
    (body adt-accessor-decl "[(letexpr?) -> IExpression]"
          IExpression_adt nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (add const-decl "finseq[T]" more_finseq nil)
    (member const-decl "bool" sets nil)
    (drop const-decl "finite_set[nat]" IL nil)
    (bumpn const-decl "finite_set[nat]" IL nil)
    (union const-decl "set" sets nil)
    (lett? adt-recognizer-decl "[typeinfo -> boolean]" typeinfo_adt
     nil)
    (lrhs adt-accessor-decl "[(lett?) -> typeinfo]" typeinfo_adt nil)
    (unmarkvar const-decl "(variable?)" preprocess nil)
    (letexpr adt-constructor-decl
     "[[IExpression, IExpression] -> (letexpr?)]" IExpression_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (add const-decl "(nonempty?)" sets nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (pop? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (pop adt-constructor-decl "[IExpression -> (pop?)]" IExpression_adt
         nil)
    (pop1_var skolem-const-decl "IExpression" typed_reduction_props
     nil)
    (pbody adt-accessor-decl "[(pop?) -> IExpression]" IExpression_adt
     nil)
    (popt? adt-recognizer-decl "[typeinfo -> boolean]" typeinfo_adt
     nil)
    (ptbody adt-accessor-decl "[(popt?) -> typeinfo]" typeinfo_adt
     nil))
   nil)
  (build_redex_match_type-1 nil 3703437224
   ("" (induct A)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (grind) nil nil)
     ("5" (skeep* :preds? t)
      (("5" (expand unmark -5)
        (("5" (expand translate_refs -5)
          (("5" (case "letexpr?(B)")
            (("1" (assert)
              (("1" (expand buildRedexType +)
                (("1" (expand is_well_typed (-11 -12))
                  (("1" (flatten)
                    (("1" (assert)
                      (("1" (case "atom?(letexpr1_var)")
                        (("1" (case "atom?(letrhs(B))")
                          (("1" (assert) nil nil)
                           ("2" (replace -7 :dir RL)
                            (("2" (simplify)
                              (("2"
                                (use translate_refs_atom)
                                (("2" (use unmark_atom) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (case "atom?(letrhs(B))")
                          (("1" (replace -7 :dir RL)
                            (("1" (simplify)
                              (("1"
                                (hide-all-but (1 2 -1))
                                (("1"
                                  (generalize
                                   letexpr1_var
                                   letexpr1_var)
                                  (("1"
                                    (induct-and-simplify letexpr1_var)
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2"
                              (inst -2 "letrhs(B)" def_types def_types2
                               dom_types dom_types2 _ _ "lrhs(tA)"
                               translate)
                              (("2"
                                (inst? -2)
                                (("2"
                                  (inst? -2)
                                  (("2"
                                    (split -2)
                                    (("1"
                                      (replace -1)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2" (grind) nil nil)
                                     ("3" (grind) nil nil)
                                     ("4"
                                      (decompose-equality -5)
                                      nil
                                      nil)
                                     ("5" (grind) nil nil)
                                     ("6" (grind) nil nil)
                                     ("7" (grind) nil nil)
                                     ("8" (grind) nil nil)
                                     ("9" (grind) nil nil)
                                     ("10" (propax) nil nil)
                                     ("11" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (grind) nil nil) ("7" (grind) nil nil) ("8" (grind) nil nil)
     ("9" (grind) nil nil) ("10" (grind) nil nil)
     ("11" (skeep* :preds? t)
      (("11" (expand unmark -4)
        (("11" (expand translate_refs -4)
          (("11" (case "pop?(B)")
            (("1" (assert)
              (("1" (expand is_well_typed (-10 -11))
                (("1" (flatten)
                  (("1" (expand buildRedexType +)
                    (("1" (assert)
                      (("1" (case "atom?(pop1_var)")
                        (("1" (case "atom?(pbody(B))")
                          (("1" (assert) nil nil)
                           ("2" (decompose-equality -6)
                            (("2" (replace -1 :dir RL)
                              (("2"
                                (use translate_refs_atom)
                                (("2" (use unmark_atom) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (case "atom?(pbody(B))")
                          (("1" (decompose-equality -6)
                            (("1" (replace -1 :dir RL)
                              (("1"
                                (expand buildRedex 2)
                                (("1"
                                  (assert)
                                  (("1"
                                    (hide-all-but (1 2 -2))
                                    (("1"
                                      (generalize pop1_var pop1_var)
                                      (("1"
                                        (induct-and-simplify pop1_var)
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2"
                              (inst -2 "pbody(B)" _ _ _ _ _ _
                               "ptbody(tA)" _)
                              (("2"
                                (inst?)
                                (("2"
                                  (inst?)
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (split -2)
                                      (("1"
                                        (replace -1)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2" (grind) nil nil)
                                       ("3" (grind) nil nil)
                                       ("4"
                                        (decompose-equality -4)
                                        nil
                                        nil)
                                       ("5"
                                        (expand buildRedex +)
                                        (("5" (propax) nil nil))
                                        nil)
                                       ("6" (grind) nil nil)
                                       ("7" (grind) nil nil)
                                       ("8" (grind) nil nil)
                                       ("9" (grind) nil nil)
                                       ("10" (propax) nil nil)
                                       ("11" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (grind) nil nil) ("13" (grind) nil nil)
     ("14" (delete 2) (("14" (grind) nil nil)) nil)
     ("15" (delete 2) (("15" (grind) nil nil)) nil))
    nil)
   ((ptbody adt-accessor-decl "[(popt?) -> typeinfo]" typeinfo_adt nil)
    (popt? adt-recognizer-decl "[typeinfo -> boolean]" typeinfo_adt
     nil)
    (pbody adt-accessor-decl "[(pop?) -> IExpression]" IExpression_adt
     nil)
    (pop adt-constructor-decl "[IExpression -> (pop?)]" IExpression_adt
         nil)
    (pop? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (add const-decl "(nonempty?)" sets nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (letexpr adt-constructor-decl
     "[[IExpression, IExpression] -> (letexpr?)]" IExpression_adt nil)
    (value? const-decl "bool" IL nil)
    (unmarkvar const-decl "(variable?)" preprocess nil)
    (lrhs adt-accessor-decl "[(lett?) -> typeinfo]" typeinfo_adt nil)
    (lett? adt-recognizer-decl "[typeinfo -> boolean]" typeinfo_adt
     nil)
    (union const-decl "set" sets nil)
    (bumpn const-decl "finite_set[nat]" IL nil)
    (drop const-decl "finite_set[nat]" IL nil)
    (member const-decl "bool" sets nil)
    (add const-decl "finseq[T]" more_finseq nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (body adt-accessor-decl "[(letexpr?) -> IExpression]"
          IExpression_adt nil)
    (letrhs adt-accessor-decl "[(letexpr?) -> IExpression]"
     IExpression_adt nil)
    (unmark_atom judgement-tcc nil preprocess nil)
    (translate_refs_atom judgement-tcc nil reduction_props nil)
    (atom? const-decl "bool" IL nil)
    (letexpr? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (in_varlist const-decl "finite_set[nat]" IL nil)
    (unmarkvars_length rec-application-judgement
     "{J | length(J) = length(L)}" preprocess nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (variable? adt-recognizer-decl "[IExpression -> boolean]"
               IExpression_adt nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (emptyset const-decl "set" sets nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (singleton const-decl "(singleton?)" sets nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IExpression_induction formula-decl nil IExpression_adt nil)
    (buildRedexType def-decl "{tK, tB | typeinfo_fill(tK, tB) = tA}"
     typed_reduction nil)
    (typeinfo_fill def-decl "typeinfo" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_reduction_props nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (IExpression type-decl nil IExpression_adt nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (release? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (IContext type-decl nil IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fill def-decl "IExpression" IL nil)
    (buildRedex def-decl "{K, B | fill(K, B) = A}" IL nil)
    (translate_refs def-decl "IExpression" reduction_props nil)
    (unmark def-decl "IExpression" preprocess nil)
    (contextPure? def-decl "bool" IL nil))
   shostak))
 (translate_refs_e_pure 0
  (translate_refs_e_pure-1 nil 3703512447
   ("" (induct A)
    (("1" (grind) nil nil) ("2" (grind) nil nil) ("3" (grind) nil nil)
     ("4" (grind) nil nil) ("5" (grind) nil nil) ("6" (grind) nil nil)
     ("7" (grind) nil nil) ("8" (grind) nil nil) ("9" (grind) nil nil)
     ("10" (grind) nil nil) ("11" (grind) nil nil)
     ("12" (grind) nil nil) ("13" (grind) nil nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (variable? adt-recognizer-decl "[IExpression -> boolean]"
               IExpression_adt nil)
    (IExpression_induction formula-decl nil IExpression_adt nil)
    (translate_refs def-decl "IExpression" reduction_props nil)
    (pure? def-decl "bool" IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IExpression type-decl nil IExpression_adt nil))
   shostak))
 (unmark_e_pure 0
  (unmark_e_pure-1 nil 3703512485 ("" (induct-and-simplify A) nil nil)
   ((IExpression type-decl nil IExpression_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pure? def-decl "bool" IL nil)
    (unmark def-decl "IExpression" preprocess nil)
    (IExpression_induction formula-decl nil IExpression_adt nil)
    (unmarkvars_length rec-application-judgement
     "{J | length(J) = length(L)}" preprocess nil)
    (unmarkvar const-decl "(variable?)" preprocess nil))
   shostak))
 (make_redex_types_match_TCC1 0
  (make_redex_types_match_TCC1-1 nil 3703435269
   ("" (subtype-tcc) nil nil)
   ((nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (value? const-decl "bool" IL nil))
   nil
   (make_redex_types_match subtype "trS"
    "{tS | typed_rreduction.tS`state`context = IL.hole AND NOT IL.value?(typed_rreduction.tS`state`redex)}")))
 (make_redex_types_match_TCC2 0
  (make_redex_types_match_TCC2-1 nil 3703435269
   ("" (subtype-tcc) nil nil)
   ((value? const-decl "bool" IL nil)
    (make_redex const-decl "{rS | pureRedex?(rS`redex)}" rreduction
     nil)
    (make_redex_typed const-decl "typed_rstate" typed_rreduction nil)
    (releaseRedex? const-decl "bool" IL nil)
    (stack_matches const-decl "boolean" reduction_props nil)
    (store_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" typed_reduction_props nil)
    (state_matches? const-decl "boolean" typed_reduction_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (make_redex_types_match subtype "tS"
    "{tS | typed_reduction.tS`state`context = IL.hole AND NOT IL.value?(typed_reduction.tS`state`redex)}")))
 (make_redex_types_match 0
  (make_redex_types_match-1 nil 3703435270
   ("" (skeep :preds? t)
    (("" (expand state_matches?)
      (("" (skeep)
        (("" (expand state_matches)
          (("" (expand make_redex_typed)
            (("" (flatten)
              (("" (expand types_matches)
                (("" (assert)
                  (("" (lemma build_redex_match_type)
                    ((""
                      (inst -1 "trS`state`redex" "tS`state`redex" _ _ _
                       _ _ _ _ _)
                      (("" (inst?)
                        ((""
                          (inst -1 "trS`def_types" "tS`def_types"
                           "trS`dom_types" "tS`dom_types"
                           "trS`stack_types" "tS`stack_types"
                           "translate")
                          (("" (split -1)
                            (("1" (replace -1)
                              (("1" (replace*) nil nil)) nil)
                             ("2" (typepred "trS`state`redex")
                              (("2" (propax) nil nil)) nil)
                             ("3" (typepred "tS`state`redex")
                              (("3" (propax) nil nil)) nil)
                             ("4" (expand state_matches)
                              (("4" (flatten) nil nil)) nil)
                             ("5" (expand make_redex)
                              (("5"
                                (expand releaseRedex?)
                                (("5" (propax) nil nil))
                                nil))
                              nil)
                             ("6" (typepred "trS`stack_types")
                              (("6"
                                (typepred "trS`state`redex")
                                (("6" (grind) nil nil))
                                nil))
                              nil)
                             ("7" (typepred "trS`stack_types")
                              (("7"
                                (typepred "trS`state`redex")
                                (("7"
                                  (skeep)
                                  (("7"
                                    (inst
                                     -2
                                     "i-popDepth(trS`state`redex)")
                                    (("1"
                                      (rewrite cvars_vars)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("8" (typepred "tS`stack_types")
                              (("8"
                                (typepred "tS`state`redex")
                                (("8" (grind) nil nil))
                                nil))
                              nil)
                             ("9" (typepred "tS`stack_types")
                              (("9"
                                (typepred "tS`state`redex")
                                (("9"
                                  (skeep)
                                  (("9"
                                    (inst
                                     -2
                                     "i-popDepth(tS`state`redex)")
                                    (("1"
                                      (rewrite cvars_vars)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("10" (typepred "trS`redex_type")
                              (("10" (propax) nil nil)) nil)
                             ("11" (typepred "tS`redex_type")
                              (("11" (replace*) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((state_matches? const-decl "boolean" typed_reduction_props nil)
    (state_matches const-decl "boolean" typed_reduction_props nil)
    (IExpression type-decl nil IExpression_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (IContext type-decl nil IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cpure? def-decl "bool" IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (below type-eq-decl nil nat_types nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (refs def-decl "bool" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil)
    (estate type-eq-decl nil reduction nil)
    (typed_state type-eq-decl nil typed_reduction nil)
    (tdef type-eq-decl nil typed_reduction_props nil)
    (tS skolem-const-decl "typed_state" typed_reduction_props nil)
    (i skolem-const-decl "nat" typed_reduction_props nil)
    (cvars_vars formula-decl nil preprocess nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (trS skolem-const-decl "typed_rstate" typed_reduction_props nil)
    (i skolem-const-decl "nat" typed_reduction_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vars_mark_type application-judgement "{C | vars(C) = vars(B)}"
     preprocess nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" sigma_set
     "sigma_set/")
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[nat]" countability
     "sets_aux/")
    (make_redex const-decl "{rS | pureRedex?(rS`redex)}" rreduction
     nil)
    (releaseRedex? const-decl "bool" IL nil)
    (state_matches const-decl "boolean" reduction_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (build_redex_match_type formula-decl nil typed_reduction_props nil)
    (types_matches const-decl "boolean" typed_reduction_props nil)
    (make_redex_typed const-decl "typed_rstate" typed_rreduction nil)
    (make_redex_typed const-decl "typed_state" typed_reduction nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   shostak))
 (bisimulation_lemma_TCC1 0
  (bisimulation_lemma_TCC1-1 nil 3703351555 ("" (subtype-tcc) nil nil)
   ((defs_well_typed const-decl "boolean" typed_reduction nil)
    (to_topstate const-decl "topstate" reduction nil)
    (typed_to_topstate const-decl "typed_state" typed_reduction nil)
    (to_topstate const-decl "rtopstate" rreduction nil)
    (typed_to_topstate const-decl "typed_rstate" typed_rreduction nil)
    (stack_matches const-decl "boolean" reduction_props nil)
    (store_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" typed_reduction_props nil)
    (state_matches? const-decl "boolean" typed_reduction_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (bisimulation_lemma subtype "tS"
    "{tS | NOT typed_reduction.tS`state`error AND typed_reduction.defs_well_typed(D, typed_reduction.tS`def_types)}")))
 (bisimulation_lemma_TCC2 0
  (bisimulation_lemma_TCC2-1 nil 3703351555 ("" (subtype-tcc) nil nil)
   ((defs_well_typed const-decl "boolean" typed_reduction nil)
    (to_topstate const-decl "topstate" reduction nil)
    (typed_to_topstate const-decl "typed_state" typed_reduction nil)
    (to_topstate const-decl "rtopstate" rreduction nil)
    (typed_to_topstate const-decl "typed_rstate" typed_rreduction nil)
    (stack_matches const-decl "boolean" reduction_props nil)
    (store_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" typed_reduction_props nil)
    (state_matches? const-decl "boolean" typed_reduction_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (bisimulation_lemma subtype "trS"
    "{trS | typed_reduction.defs_well_typed(D, trS`def_types)}")))
 (bisimulation_lemma 0
  (bisimulation_lemma-12 "" 3706362168
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                                                    state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                                                 (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "value?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "value?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "value?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "value?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_value)
                                                            (("1"
                                                              (rewrite
                                                               unmark_value)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               state_matches?)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (expand
                                                                   state_matches
                                                                   -2)
                                                                  (("1"
                                                                    (with-labels
                                                                     (flatten)
                                                                     ((err
                                                                       trr
                                                                       unm
                                                                       stam
                                                                       stom)))
                                                                    (("1"
                                                                      (with-labels
                                                                       (case
                                                                        "NOT releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                       ((rel)))
                                                                      (("1"
                                                                        (expand
                                                                         "releaseRedex?"
                                                                         rel)
                                                                        (("1"
                                                                          (case
                                                                           "variable?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "variable?(make_redex_typed(typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (use
                                                                                 variable_match)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil)
                                                                                 ("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "variable?(make_redex_typed(typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (1
                                                                                    -1
                                                                                    rel))
                                                                                  (("1"
                                                                                    (expand*
                                                                                     make_redex_typed
                                                                                     make_redex)
                                                                                    (("1"
                                                                                      (generalize
                                                                                       "typed_to_topstate(rS)`state`redex"
                                                                                       "A"
                                                                                       "IExpression")
                                                                                      (("1"
                                                                                        (induct
                                                                                         A)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("4"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("5"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("6"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("7"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("8"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("9"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("10"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("11"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("12"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("13"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "pureLetRedex?(make_redex_typed
                                                                                                                                                                  (typed_to_topstate(rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "pureLetRedex?(make_redex_typed
                                                                                                                                                                            (typed_to_topstate(tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (replace*)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       pureLetRedex?)
                                                                                      (("2"
                                                                                        (expand
                                                                                         letRedex?)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   translate_refs_value)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     unmark_value)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("3"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "pureLetRedex?(make_redex_typed
                                                                                                                                                                            (typed_to_topstate(tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -1
                                                                                        rel))
                                                                                      (("1"
                                                                                        (expand*
                                                                                         make_redex_typed
                                                                                         make_redex)
                                                                                        (("1"
                                                                                          (generalize
                                                                                           "typed_to_topstate(rS)`state`redex"
                                                                                           "A"
                                                                                           "IExpression")
                                                                                          (("1"
                                                                                            (induct
                                                                                             A)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("4"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("5"
                                                                                              (skeep*
                                                                                               :preds?
                                                                                               t)
                                                                                              (("5"
                                                                                                (expand
                                                                                                 buildRedex
                                                                                                 (-3
                                                                                                  1
                                                                                                  2))
                                                                                                (("5"
                                                                                                  (case
                                                                                                   "value?(letexpr1_var)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         pureLetRedex?)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           letRedex?)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand*
                                                                                                               unmark
                                                                                                               translate_refs)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 translate_refs_e_pure)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   unmark_e_pure)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("6"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("7"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("8"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("9"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("10"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("11"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("12"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("13"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                     (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                               (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (case-replace
                                                                                               "rS`def_types = tS`def_types")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "fun(make_redex_typed(typed_to_topstate
                                                   (tS))`state`redex) = fun(make_redex_typed(typed_to_topstate
                                                   (rS))`state`redex)")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   trr
                                                                                                   :dir
                                                                                                   RL)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     applyRedex?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (delete
                                                                                                         obj)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand*
                                                                                                 make_redex_typed
                                                                                                 typed_to_topstate)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("4"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           applyRedex?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               (unmark
                                                                                                translate_refs)
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                               (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -1
                                                                                            rel))
                                                                                          (("1"
                                                                                            (generalize
                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                             A
                                                                                             "IExpression")
                                                                                            (("1"
                                                                                              (induct-and-simplify
                                                                                               A)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                         (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (replace*)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   ift_condtion_match)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                                     "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -1)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand*
                                                                                                       make_redex_typed
                                                                                                       typed_to_topstate
                                                                                                       make_redex
                                                                                                       to_topstate)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand*
                                                                                                       make_redex_typed
                                                                                                       typed_to_topstate
                                                                                                       make_redex_e
                                                                                                       to_topstate)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               pureIftRedex?
                                                                                               iftRedex?)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand*
                                                                                                       (unmark
                                                                                                        translate_refs)
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           translate_refs_pure)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             unmark_pure)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (use
                                                                                                           translate_refs_pure)
                                                                                                          (("3"
                                                                                                            (use
                                                                                                             unmark_pure)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -1
                                                                                                rel))
                                                                                              (("1"
                                                                                                (generalize
                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                 A
                                                                                                 "IExpression")
                                                                                                (("1"
                                                                                                  (induct
                                                                                                   A)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("5"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("6"
                                                                                                    (skeep*)
                                                                                                    (("6"
                                                                                                      (delete
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("6"
                                                                                                        (expand
                                                                                                         pureIftRedex?)
                                                                                                        (("6"
                                                                                                          (expand
                                                                                                           iftRedex?)
                                                                                                          (("6"
                                                                                                            (flatten)
                                                                                                            (("6"
                                                                                                              (expand*
                                                                                                               unmark
                                                                                                               translate_refs)
                                                                                                              (("6"
                                                                                                                (assert)
                                                                                                                (("6"
                                                                                                                  (rewrite
                                                                                                                   translate_refs_e_pure)
                                                                                                                  (("6"
                                                                                                                    (rewrite
                                                                                                                     unmark_e_pure)
                                                                                                                    (("6"
                                                                                                                      (rewrite
                                                                                                                       translate_refs_e_pure)
                                                                                                                      (("6"
                                                                                                                        (rewrite
                                                                                                                         unmark_e_pure)
                                                                                                                        (("6"
                                                                                                                          (split)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("7"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("8"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("9"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("10"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("11"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("12"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("13"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                         (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   updateRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (1
                                                                                                    -1
                                                                                                    rel))
                                                                                                  (("1"
                                                                                                    (generalize
                                                                                                     "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                     A
                                                                                                     "IExpression")
                                                                                                    (("1"
                                                                                                      (induct-and-simplify
                                                                                                       A)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                        (rS))`state`redex)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     types_matches)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       lookupRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (1
                                                                                                        -1
                                                                                                        rel))
                                                                                                      (("1"
                                                                                                        (generalize
                                                                                                         "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                         A
                                                                                                         "IExpression")
                                                                                                        (("1"
                                                                                                          (induct-and-simplify
                                                                                                           A)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                            (rS))`state`redex)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                      (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         types_matches)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           newintRedex?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               unmark
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 translate_refs
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                      (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            -1
                                                                                                            rel))
                                                                                                          (("1"
                                                                                                            (generalize
                                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                             A
                                                                                                             "IExpression")
                                                                                                            (("1"
                                                                                                              (induct-and-simplify
                                                                                                               A)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                (rS))`state`redex)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             types_matches)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               newrefRedex?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (1
                                                                                                                -1
                                                                                                                rel))
                                                                                                              (("1"
                                                                                                                (generalize
                                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                                 A
                                                                                                                 "IExpression")
                                                                                                                (("1"
                                                                                                                  (induct-and-simplify
                                                                                                                   A)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                    (rS))`state`redex)")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 types_matches)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (replace*)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (delete
                                                                                                               obj)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 trr
                                                                                                                 :dir
                                                                                                                 RL)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   popRedex?)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           unmark
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             translate_refs
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           unmark
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             translate_refs
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               translate_refs_value)
                                                                                                                              (("2"
                                                                                                                                (use
                                                                                                                                 unmark_value)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                                            (("1"
                                                                                                              (delete
                                                                                                               obj)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 trr
                                                                                                                 :dir
                                                                                                                 RL)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (1
                                                                                                                    -1
                                                                                                                    rel))
                                                                                                                  (("1"
                                                                                                                    (expand*
                                                                                                                     make_redex_typed
                                                                                                                     make_redex)
                                                                                                                    (("1"
                                                                                                                      (generalize
                                                                                                                       "typed_to_topstate(rS)`state`redex"
                                                                                                                       "A"
                                                                                                                       "IExpression")
                                                                                                                      (("1"
                                                                                                                        (induct
                                                                                                                         A)
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("5"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("6"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("7"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("8"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("9"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("10"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("11"
                                                                                                                          (skeep*)
                                                                                                                          (("11"
                                                                                                                            (expand
                                                                                                                             buildRedex
                                                                                                                             (-2
                                                                                                                              1
                                                                                                                              2))
                                                                                                                            (("11"
                                                                                                                              (case
                                                                                                                               "value?(pop1_var)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("12"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("13"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 make_redex_typed)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "make_redex(typed_to_topstate(rS)`state)")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     pureRedex?)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("5"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("6"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("7"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("8"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("9"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("10"
                                                                                                                        (expand
                                                                                                                         types_matches)
                                                                                                                        (("10"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (delete
                                                                         obj)
                                                                        (("2"
                                                                          (expand
                                                                           make_redex_typed
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             make_redex
                                                                             -1)
                                                                            (("2"
                                                                              (rewrite
                                                                               top_releases_build_redex
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand*
                                                                                 typed_to_topstate
                                                                                 to_topstate)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   top_releases_ct_fill)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil
                                                            nil)
                                                           ("5"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil
                                                            nil)
                                                           ("6"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("6"
                                                              (expand
                                                               make_redex
                                                               -1)
                                                              (("6"
                                                                (rewrite
                                                                 top_releases_build_redex
                                                                 :dir
                                                                 RL)
                                                                (("6"
                                                                  (expand
                                                                   typed_to_topstate
                                                                   -1)
                                                                  (("6"
                                                                    (expand
                                                                     to_topstate
                                                                     -1)
                                                                    (("6"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("6"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("7"
                                                            (expand
                                                             state_matches?)
                                                            (("7"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("7"
                                                                (expand
                                                                 state_matches)
                                                                (("7"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT value?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                                                                                        typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   ((pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (typeinfo type-decl nil typeinfo_adt nil)
    (tdef type-eq-decl nil typed_rreduction nil)
    (IContext type-decl nil IL nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cpure? def-decl "bool" IL nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (markc def-decl "IContext" preprocess nil)
    (emptyset const-decl "set" sets nil)
    (below type-eq-decl nil nat_types nil)
    (IExpression type-decl nil IExpression_adt nil)
    (value? const-decl "bool" IL nil) (Stack type-eq-decl nil IL nil)
    (every const-decl "bool" finseq_theorems nil)
    (domainValue? const-decl "bool" IL nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (refs def-decl "bool" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (popDepth def-decl "nat" IL nil)
    (vars def-decl "finite_set[nat]" IL nil)
    (popDepth def-decl "nat" IL nil) (<= const-decl "bool" reals nil)
    (contextPure? def-decl "bool" IL nil)
    (mark def-decl "IExpression" preprocess nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (Store type-eq-decl nil reduction nil)
    (refcount const-decl "nat" rreduction nil)
    (rstate type-eq-decl nil rreduction nil)
    (noDanglingRefs? const-decl "bool" rreduction nil)
    (allReleaseMarked? def-decl "bool" preprocess nil)
    (armc? def-decl "bool" preprocess nil)
    (below type-eq-decl nil naturalnumbers nil)
    (value_of_type const-decl "boolean" typed_reduction nil)
    (cvars def-decl "finite_set[nat]" preprocess nil)
    (tdef type-eq-decl nil typed_reduction nil)
    (is_well_typed def-decl "bool" typed_reduction nil)
    (typeinfo_ctx type-decl nil typed_reduction nil)
    (is_well_typed_ctx def-decl "bool" typed_reduction nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (popn const-decl "finseq[nat]" typed_reduction nil)
    (expr_type def-decl "nat" typed_reduction nil)
    (typed_rstate type-eq-decl nil typed_rreduction nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (top_releases_ct def-decl "nat" reduction_props nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (typed_to_topstate const-decl "typed_rstate" typed_rreduction nil)
    (typed_to_topstate const-decl "typed_state" typed_reduction nil)
    (state_matches? const-decl "boolean" typed_reduction_props nil)
    (defs_well_typed const-decl "boolean" typed_reduction nil)
    (Defs type-eq-decl nil typed_reduction nil)
    (Definition type-eq-decl nil typed_reduction nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (typed_state type-eq-decl nil typed_reduction nil)
    (estate type-eq-decl nil reduction nil)
    (Defs type-eq-decl nil typed_reduction_props nil)
    (Definition type-eq-decl nil typed_reduction_props nil)
    (unmark def-decl "IExpression" preprocess nil)
    (pure? def-decl "bool" IL nil)
    (typed_reduce const-decl "typed_state" typed_reduction nil)
    (typed_reduce_n def-decl "typed_rstate" typed_reduction_props nil)
    (typed_reduce_state formula-decl nil typed_reduction nil)
    (bisimulation_lemma formula-decl nil reduction_props nil)
    (Definition type-eq-decl nil reduction_props nil)
    (Defs type-eq-decl nil reduction_props nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (typed_reduce_state formula-decl nil typed_rreduction nil)
    (reduce_ndr application-judgement "(noDanglingRefs?)" rreduction
     nil)
    (rreduce_n def-decl "rstate" reduction_props nil)
    (top_releases_ct_fill formula-decl nil reduction_props nil)
    (IExpression_induction formula-decl nil IExpression_adt nil)
    (unmarkvars_length rec-application-judgement
     "{J | length(J) = length(L)}" preprocess nil)
    (unmarkvar const-decl "(variable?)" preprocess nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (to_topstate_dangling application-judgement "(noDanglingRefs?)"
     rreduction nil)
    (to_topstate const-decl "rtopstate" rreduction nil)
    (rtopstate type-eq-decl nil rreduction nil)
    (hole adt-constructor-decl "(hole?)" IL nil)
    (hole? adt-recognizer-decl "[IContext -> boolean]" IL nil)
    (translate_refs def-decl "IExpression" reduction_props nil)
    (unmark_contextPure rec-application-judgement "(contextPure?)"
     preprocess nil)
    (state_matches? const-decl "boolean" reduction_props nil)
    (make_redex_typed const-decl "typed_state" typed_reduction nil)
    (make_redex_typed const-decl "typed_rstate" typed_rreduction nil)
    (make_redex_types_match formula-decl nil typed_reduction_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (top_releases_build_redex formula-decl nil reduction_props nil)
    (release? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (buildRedex def-decl "{K, B | fill(K, B) = A}" IL nil)
    (fill def-decl "IExpression" IL nil)
    (translate_refs_e_pure formula-decl nil typed_reduction_props nil)
    (unmark_e_pure formula-decl nil typed_reduction_props nil)
    (pureRedex? const-decl "bool" IL nil)
    (pbody adt-accessor-decl "[(pop?) -> IExpression]" IExpression_adt
     nil)
    (pop? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (popRedex? const-decl "bool" IL nil)
    (newrefRedex? const-decl "bool" IL nil)
    (newintRedex? const-decl "bool" IL nil)
    (lookupRedex? const-decl "bool" IL nil)
    (updateRedex? const-decl "bool" IL nil)
    (ift_condtion_match formula-decl nil reduction_props nil)
    (thenexpr adt-accessor-decl "[(ift?) -> IExpression]"
     IExpression_adt nil)
    (ift? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (elseexpr adt-accessor-decl "[(ift?) -> IExpression]"
     IExpression_adt nil)
    (iftRedex? const-decl "bool" IL nil)
    (pureIftRedex? const-decl "bool" IL nil)
    (fun adt-accessor-decl "[(application?) -> nat]" IExpression_adt
         nil)
    (application? adt-recognizer-decl "[IExpression -> boolean]"
                  IExpression_adt nil)
    (applyRedex? const-decl "bool" IL nil)
    (letRedex? const-decl "bool" IL nil)
    (unmark def-decl "IContext" preprocess nil)
    (letrhs adt-accessor-decl "[(letexpr?) -> IExpression]"
     IExpression_adt nil)
    (letexpr? adt-recognizer-decl "[IExpression -> boolean]"
     IExpression_adt nil)
    (unmark_pure recursive-judgement-axiom nil preprocess nil)
    (body adt-accessor-decl "[(letexpr?) -> IExpression]"
          IExpression_adt nil)
    (translate_refs_pure recursive-judgement-axiom nil reduction_props
     nil)
    (pureLetRedex? const-decl "bool" IL nil)
    (variable_match formula-decl nil reduction_props nil)
    (tS skolem-const-decl "typed_state" typed_reduction_props nil)
    (goodrstate type-eq-decl nil reduction_props nil)
    (rS skolem-const-decl "typed_rstate" typed_reduction_props nil)
    (make_redex const-decl "{rS | pureRedex?(rS`redex)}" rreduction
     nil)
    (to_topstate const-decl "topstate" reduction nil)
    (make_redex_e const-decl "{eS | pureRedex?(eS`redex)}" reduction
     nil)
    (stack_matches const-decl "boolean" reduction_props nil)
    (store_matches const-decl "boolean" reduction_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (buildRedexPure rec-application-judgement "{K, B |
   fill(K, B) = A AND
    ((cpure?(K) AND pureRedex?(B)) OR (K = hole AND value?(B)))}" IL
     nil)
    (variable? adt-recognizer-decl "[IExpression -> boolean]"
               IExpression_adt nil)
    (releaseRedex? const-decl "bool" IL nil)
    (make_redex_match formula-decl nil reduction_props nil)
    (topstate type-eq-decl nil reduction nil)
    (translate_refs_value judgement-tcc nil reduction_props nil)
    (translate_refs_contextPure rec-application-judgement
     "(contextPure?)" reduction_props nil)
    (unmark_cpure rec-application-judgement "(cpure?)" preprocess nil)
    (finite_union application-judgement "finite_set[nat]" countability
     "sets_aux/")
    (unmark_value judgement-tcc nil preprocess nil)
    (types_matches const-decl "boolean" typed_reduction_props nil)
    (typed_reduce const-decl "typed_rstate" typed_rreduction nil)
    (Defs type-eq-decl nil typed_rreduction nil)
    (Definition type-eq-decl nil typed_rreduction nil)
    (reduce const-decl "estate" reduction nil)
    (goodstate type-eq-decl nil reduction nil)
    (Defs type-eq-decl nil reduction nil)
    (Definition type-eq-decl nil reduction nil)
    (state_matches const-decl "boolean" reduction_props nil)
    (state_matches const-decl "boolean" typed_reduction_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (releaseReduce_reduce_match formula-decl nil reduction_props nil)
    (typeinfo_fill def-decl "typeinfo" typed_reduction nil)
    (buildRedexType def-decl "{tK, tB | typeinfo_fill(tK, tB) = tA}"
     typed_reduction nil)
    (releaseReduce const-decl "rstate" rreduction nil)
    (decref1_preserves_error formula-decl nil reduction_props nil)
    (decref const-decl "{rS1 |
   allcountStore(rS1) <= allcountStore(rS) AND
    rS1`domain = rS`domain AND
     (FORALL (s: (rS`domain)):
        rS1`store(s)`length = rS`store(s)`length AND
         rS1`count(s) <= rS`count(s) AND
          (rS1`count(s) = 0 OR rS1`store(s) = rS`store(s)))
      AND noDanglingRefs?(rS1)}" rreduction nil)
    (top_release_reduce formula-decl nil reduction_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (top_releases_reduce formula-decl nil reduction_props nil)
    (D skolem-const-decl "Defs" typed_reduction_props nil))
   shostak)
  (bisimulation_lemma-11 "" 3706361472
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                                                    state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                                                 (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil)))
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "value?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "value?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil)))))))
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "value?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil)))))))
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil)))))
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil)))))))))))))))))))
                                                 ("2"
                                                  (case
                                                   "value?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_value)
                                                            (("1"
                                                              (rewrite
                                                               unmark_value)
                                                              nil)))))))))))
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               state_matches?)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (expand
                                                                   state_matches
                                                                   -2)
                                                                  (("1"
                                                                    (with-labels
                                                                     (flatten)
                                                                     ((err
                                                                       trr
                                                                       unm
                                                                       stam
                                                                       stom)))
                                                                    (("1"
                                                                      (with-labels
                                                                       (case
                                                                        "NOT releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                       ((rel)))
                                                                      (("1"
                                                                        (expand
                                                                         "releaseRedex?"
                                                                         rel)
                                                                        (("1"
                                                                          (case
                                                                           "variable?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                          (("1"
                                                                            (postpone)
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "variable?(make_redex_typed(typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (postpone)
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "pureLetRedex?(make_redex_typed
                                                                                                                                                                  (typed_to_topstate(rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "pureLetRedex?(make_redex_typed
                                                                                                                                                                            (typed_to_topstate(tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (replace*)
                                                                                        nil)))))))
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       pureLetRedex?)
                                                                                      (("2"
                                                                                        (expand
                                                                                         letRedex?)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                nil)))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   translate_refs_value)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     unmark_value)
                                                                                                    nil)))))))
                                                                                             ("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (expand*
                                                                                                 unmark
                                                                                                 translate_refs
                                                                                                 +)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("3"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil)))))))))))))))))))))
                                                                               ("2"
                                                                                (case
                                                                                 "pureLetRedex?(make_redex_typed
                                                                                                                                                                            (typed_to_topstate(tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -1
                                                                                        rel))
                                                                                      (("1"
                                                                                        (expand*
                                                                                         make_redex_typed
                                                                                         make_redex)
                                                                                        (("1"
                                                                                          (generalize
                                                                                           "typed_to_topstate(rS)`state`redex"
                                                                                           "A"
                                                                                           "IExpression")
                                                                                          (("1"
                                                                                            (induct
                                                                                             A)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("3"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("4"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("5"
                                                                                              (skeep*
                                                                                               :preds?
                                                                                               t)
                                                                                              (("5"
                                                                                                (expand
                                                                                                 buildRedex
                                                                                                 (-3
                                                                                                  1
                                                                                                  2))
                                                                                                (("5"
                                                                                                  (case
                                                                                                   "value?(letexpr1_var)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         pureLetRedex?)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           letRedex?)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand*
                                                                                                               unmark
                                                                                                               translate_refs)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 translate_refs_e_pure)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   unmark_e_pure)
                                                                                                                  nil)))))))))))))))
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil)))))))))
                                                                                             ("6"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("7"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("8"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("9"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("10"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("11"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("12"
                                                                                              (grind)
                                                                                              nil)
                                                                                             ("13"
                                                                                              (grind)
                                                                                              nil)))))))))))))
                                                                                 ("2"
                                                                                  (case
                                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                     (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                               (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           applyRedex?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               (unmark
                                                                                                translate_refs)
                                                                                               1)
                                                                                              nil)))))))))))
                                                                                   ("2"
                                                                                    (case
                                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                               (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -1
                                                                                            rel))
                                                                                          (("1"
                                                                                            (generalize
                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                             A
                                                                                             "IExpression")
                                                                                            (("1"
                                                                                              (induct-and-simplify
                                                                                               A)
                                                                                              nil)))))))))
                                                                                     ("2"
                                                                                      (case
                                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                         (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (replace*)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   ift_condtion_match)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                                     "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -1)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand*
                                                                                                       make_redex_typed
                                                                                                       typed_to_topstate
                                                                                                       make_redex
                                                                                                       to_topstate)
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand*
                                                                                                       make_redex_typed
                                                                                                       typed_to_topstate
                                                                                                       make_redex_e
                                                                                                       to_topstate)
                                                                                                      nil)))))))))))))
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               pureIftRedex?
                                                                                               iftRedex?)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand*
                                                                                                       (unmark
                                                                                                        translate_refs)
                                                                                                       1)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           translate_refs_pure)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             unmark_pure)
                                                                                                            nil)))))))
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (use
                                                                                                           translate_refs_pure)
                                                                                                          (("3"
                                                                                                            (use
                                                                                                             unmark_pure)
                                                                                                            nil)))))))))))))))))))))
                                                                                       ("2"
                                                                                        (case
                                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -1
                                                                                                rel))
                                                                                              (("1"
                                                                                                (generalize
                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                 A
                                                                                                 "IExpression")
                                                                                                (("1"
                                                                                                  (induct
                                                                                                   A)
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("5"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("6"
                                                                                                    (skeep*)
                                                                                                    (("6"
                                                                                                      (delete
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3)
                                                                                                      (("6"
                                                                                                        (expand
                                                                                                         pureIftRedex?)
                                                                                                        (("6"
                                                                                                          (expand
                                                                                                           iftRedex?)
                                                                                                          (("6"
                                                                                                            (flatten)
                                                                                                            (("6"
                                                                                                              (expand*
                                                                                                               unmark
                                                                                                               translate_refs)
                                                                                                              (("6"
                                                                                                                (assert)
                                                                                                                (("6"
                                                                                                                  (rewrite
                                                                                                                   translate_refs_e_pure)
                                                                                                                  (("6"
                                                                                                                    (rewrite
                                                                                                                     unmark_e_pure)
                                                                                                                    (("6"
                                                                                                                      (rewrite
                                                                                                                       translate_refs_e_pure)
                                                                                                                      (("6"
                                                                                                                        (rewrite
                                                                                                                         unmark_e_pure)
                                                                                                                        (("6"
                                                                                                                          (split)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil)))))))))))))))))))))))))
                                                                                                   ("7"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("8"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("9"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("10"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("11"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("12"
                                                                                                    (grind)
                                                                                                    nil)
                                                                                                   ("13"
                                                                                                    (grind)
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (case
                                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                         (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil)))))
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   updateRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil)))))))))))))))
                                                                                           ("2"
                                                                                            (case
                                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (1
                                                                                                    -1
                                                                                                    rel))
                                                                                                  (("1"
                                                                                                    (generalize
                                                                                                     "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                     A
                                                                                                     "IExpression")
                                                                                                    (("1"
                                                                                                      (induct-and-simplify
                                                                                                       A)
                                                                                                      nil)))))))))
                                                                                             ("2"
                                                                                              (case
                                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                        (rS))`state`redex)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     types_matches)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)))))
                                                                                                 ("2"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       lookupRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil)))))))))))))))
                                                                                               ("2"
                                                                                                (case
                                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (1
                                                                                                        -1
                                                                                                        rel))
                                                                                                      (("1"
                                                                                                        (generalize
                                                                                                         "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                         A
                                                                                                         "IExpression")
                                                                                                        (("1"
                                                                                                          (induct-and-simplify
                                                                                                           A)
                                                                                                          nil)))))))))
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                            (rS))`state`redex)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                      (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         types_matches)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil)))))
                                                                                                     ("2"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           newintRedex?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               unmark
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 translate_refs
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil)))))))))))))))
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                      (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            -1
                                                                                                            rel))
                                                                                                          (("1"
                                                                                                            (generalize
                                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                             A
                                                                                                             "IExpression")
                                                                                                            (("1"
                                                                                                              (induct-and-simplify
                                                                                                               A)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                (rS))`state`redex)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             types_matches)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil)))))
                                                                                                         ("2"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               newrefRedex?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil)))))))))))))))
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (1
                                                                                                                -1
                                                                                                                rel))
                                                                                                              (("1"
                                                                                                                (generalize
                                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                                 A
                                                                                                                 "IExpression")
                                                                                                                (("1"
                                                                                                                  (induct-and-simplify
                                                                                                                   A)
                                                                                                                  nil)))))))))
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                    (rS))`state`redex)")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 types_matches)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (replace*)
                                                                                                                    nil)))))))
                                                                                                             ("2"
                                                                                                              (delete
                                                                                                               obj)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 trr
                                                                                                                 :dir
                                                                                                                 RL)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   popRedex?)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           unmark
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             translate_refs
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil)))))
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           unmark
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             translate_refs
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               translate_refs_value)
                                                                                                                              (("2"
                                                                                                                                (use
                                                                                                                                 unmark_value)
                                                                                                                                nil)))))))))))))))))))))
                                                                                                           ("2"
                                                                                                            (case
                                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                                                                              (tS))`state`redex)")
                                                                                                            (("1"
                                                                                                              (delete
                                                                                                               obj)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 trr
                                                                                                                 :dir
                                                                                                                 RL)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (1
                                                                                                                    -1
                                                                                                                    rel))
                                                                                                                  (("1"
                                                                                                                    (expand*
                                                                                                                     make_redex_typed
                                                                                                                     make_redex)
                                                                                                                    (("1"
                                                                                                                      (generalize
                                                                                                                       "typed_to_topstate(rS)`state`redex"
                                                                                                                       "A"
                                                                                                                       "IExpression")
                                                                                                                      (("1"
                                                                                                                        (induct
                                                                                                                         A)
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("5"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("6"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("7"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("8"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("9"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("10"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("11"
                                                                                                                          (skeep*)
                                                                                                                          (("11"
                                                                                                                            (expand
                                                                                                                             buildRedex
                                                                                                                             (-2
                                                                                                                              1
                                                                                                                              2))
                                                                                                                            (("11"
                                                                                                                              (case
                                                                                                                               "value?(pop1_var)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil)))
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))
                                                                                                                         ("12"
                                                                                                                          (grind)
                                                                                                                          nil)
                                                                                                                         ("13"
                                                                                                                          (grind)
                                                                                                                          nil)))))))))))))
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 make_redex_typed)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "make_redex(typed_to_topstate(rS)`state)")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     pureRedex?)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("5"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("6"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("7"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("8"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("9"
                                                                                                                        (expand
                                                                                                                         pureReleaseRedex?)
                                                                                                                        (("9"
                                                                                                                          (expand
                                                                                                                           make_redex)
                                                                                                                          (("9"
                                                                                                                            (rewrite
                                                                                                                             top_releases_build_redex
                                                                                                                             :dir
                                                                                                                             RL)
                                                                                                                            (("9"
                                                                                                                              (expand*
                                                                                                                               typed_to_topstate
                                                                                                                               to_topstate)
                                                                                                                              (("9"
                                                                                                                                (rewrite
                                                                                                                                 top_releases_ct_fill)
                                                                                                                                (("9"
                                                                                                                                  (flatten)
                                                                                                                                  (("9"
                                                                                                                                    (assert)
                                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                       ("2"
                                                                        (delete
                                                                         obj)
                                                                        (("2"
                                                                          (expand
                                                                           make_redex_typed
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             make_redex
                                                                             -1)
                                                                            (("2"
                                                                              (rewrite
                                                                               top_releases_build_redex
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand*
                                                                                 typed_to_topstate
                                                                                 to_topstate)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   top_releases_ct_fill)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil)))))))))))))))))))))))))))))
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil)
                                                           ("4"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil)
                                                           ("5"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil)
                                                           ("6"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("6"
                                                              (expand
                                                               make_redex
                                                               -1)
                                                              (("6"
                                                                (rewrite
                                                                 top_releases_build_redex
                                                                 :dir
                                                                 RL)
                                                                (("6"
                                                                  (expand
                                                                   typed_to_topstate
                                                                   -1)
                                                                  (("6"
                                                                    (expand
                                                                     to_topstate
                                                                     -1)
                                                                    (("6"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("6"
                                                                        (assert)
                                                                        nil)))))))))))))
                                                           ("7"
                                                            (expand
                                                             state_matches?)
                                                            (("7"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("7"
                                                                (expand
                                                                 state_matches)
                                                                (("7"
                                                                  (propax)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil)))))))))
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil)))))))))
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil)))
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil)))))))))))
                                             ("2"
                                              (expand types_matches)
                                              (("2"
                                                (propax)
                                                nil)))))))))))))))))
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil)))
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil)))))))))
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil)))
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil)))
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil)))
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil)))))))))))))
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil)))))))))
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3"
                                    (replace*)
                                    nil)))))))))))))))))))))))
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil)))))))
                   ("2" (propax) nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1" (assert) (("1" (grind) nil)))))
                             ("2" (grind) nil)))))))))))
                   ("4" (propax) nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT value?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                                                                                        typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil)))))))))
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil)))))))))))
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil)))))))))))))))))))
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil)))))
                                                 ("2" (propax) nil)))))
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil)))
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil)))))))))))))
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil)))
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil)))
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil)))
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil)))))
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil)))))))))))
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil)))))))))))))))))
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil)))))))))
               ("2" (split)
                (("1" (propax) nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten)
                        (("2" (replace*) nil)))))))))))))))))))))
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil)))))))))))
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil)))))))))))
     ("4" (split) (("1" (propax) nil) ("2" (propax) nil))))
    nil)
   nil nil)
  (bisimulation_lemma-10 "" 3703509422
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                                         state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                                      (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               state_matches?)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (expand
                                                                   state_matches
                                                                   -2)
                                                                  (("1"
                                                                    (with-labels
                                                                     (flatten)
                                                                     ((err
                                                                       trr
                                                                       unm
                                                                       stam
                                                                       stom)))
                                                                    (("1"
                                                                      (with-labels
                                                                       (case
                                                                        "NOT releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                       ((rel)))
                                                                      (("1"
                                                                        (expand
                                                                         "releaseRedex?"
                                                                         rel)
                                                                        (("1"
                                                                          (case
                                                                           "pureLetRedex?(make_redex_typed
                                                                                                                                       (typed_to_topstate(rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "pureLetRedex?(make_redex_typed
                                                                                                                                               (typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (replace*)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("2"
                                                                                  (expand
                                                                                   pureLetRedex?)
                                                                                  (("2"
                                                                                    (expand
                                                                                     letRedex?)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand*
                                                                                             unmark
                                                                                             translate_refs
                                                                                             +)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand*
                                                                                             unmark
                                                                                             translate_refs
                                                                                             +)
                                                                                            (("2"
                                                                                              (use
                                                                                               translate_refs_atom)
                                                                                              (("2"
                                                                                                (use
                                                                                                 unmark_atom)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (expand*
                                                                                             unmark
                                                                                             translate_refs
                                                                                             +)
                                                                                            (("3"
                                                                                              (use
                                                                                               translate_refs_pure)
                                                                                              (("3"
                                                                                                (use
                                                                                                 unmark_pure)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "pureLetRedex?(make_redex_typed
                                                                                                                                               (typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (1
                                                                                    -1
                                                                                    rel))
                                                                                  (("1"
                                                                                    (expand*
                                                                                     make_redex_typed
                                                                                     make_redex)
                                                                                    (("1"
                                                                                      (generalize
                                                                                       "typed_to_topstate(rS)`state`redex"
                                                                                       "A"
                                                                                       "IExpression")
                                                                                      (("1"
                                                                                        (induct
                                                                                         A)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("4"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("5"
                                                                                          (skeep*
                                                                                           :preds?
                                                                                           t)
                                                                                          (("5"
                                                                                            (expand
                                                                                             buildRedex
                                                                                             (-3
                                                                                              1
                                                                                              2))
                                                                                            (("5"
                                                                                              (case
                                                                                               "atom?(letexpr1_var)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     pureLetRedex?)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       letRedex?)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           unmark
                                                                                                           translate_refs)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             translate_refs_e_pure)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               unmark_e_pure)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("6"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("7"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("8"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("9"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("10"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("11"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("12"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("13"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                      (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       applyRedex?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand*
                                                                                           (unmark
                                                                                            translate_refs)
                                                                                           1)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -1
                                                                                        rel))
                                                                                      (("1"
                                                                                        (generalize
                                                                                         "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                         A
                                                                                         "IExpression")
                                                                                        (("1"
                                                                                          (induct-and-simplify
                                                                                           A)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                      (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                              (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (replace*)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               ift_condtion_match)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   -1)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand*
                                                                                                   make_redex_typed
                                                                                                   typed_to_topstate
                                                                                                   make_redex
                                                                                                   to_topstate)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand*
                                                                                                   make_redex_typed
                                                                                                   typed_to_topstate
                                                                                                   make_redex_e
                                                                                                   to_topstate)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand*
                                                                                           pureIftRedex?
                                                                                           iftRedex?)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand*
                                                                                                   (unmark
                                                                                                    translate_refs)
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   unmark
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     translate_refs
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       translate_refs_pure)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         unmark_pure)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   unmark
                                                                                                   1)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     translate_refs
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (use
                                                                                                       translate_refs_pure)
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         unmark_pure)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                              (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -1
                                                                                            rel))
                                                                                          (("1"
                                                                                            (generalize
                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                             A
                                                                                             "IExpression")
                                                                                            (("1"
                                                                                              (induct
                                                                                               A)
                                                                                              (("1"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("3"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("4"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("5"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("6"
                                                                                                (skeep*)
                                                                                                (("6"
                                                                                                  (delete
                                                                                                   -1
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("6"
                                                                                                    (expand
                                                                                                     pureIftRedex?)
                                                                                                    (("6"
                                                                                                      (expand
                                                                                                       iftRedex?)
                                                                                                      (("6"
                                                                                                        (flatten)
                                                                                                        (("6"
                                                                                                          (expand*
                                                                                                           unmark
                                                                                                           translate_refs)
                                                                                                          (("6"
                                                                                                            (assert)
                                                                                                            (("6"
                                                                                                              (rewrite
                                                                                                               translate_refs_e_pure)
                                                                                                              (("6"
                                                                                                                (rewrite
                                                                                                                 unmark_e_pure)
                                                                                                                (("6"
                                                                                                                  (rewrite
                                                                                                                   translate_refs_e_pure)
                                                                                                                  (("6"
                                                                                                                    (rewrite
                                                                                                                     unmark_e_pure)
                                                                                                                    (("6"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("7"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("8"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("9"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("10"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("11"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("12"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil)
                                                                                               ("13"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                       (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                          (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand
                                                                                               updateRedex?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   unmark
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     translate_refs
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                          (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -1
                                                                                                rel))
                                                                                              (("1"
                                                                                                (generalize
                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                 A
                                                                                                 "IExpression")
                                                                                                (("1"
                                                                                                  (induct-and-simplify
                                                                                                   A)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   lookupRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (1
                                                                                                    -1
                                                                                                    rel))
                                                                                                  (("1"
                                                                                                    (generalize
                                                                                                     "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                     A
                                                                                                     "IExpression")
                                                                                                    (("1"
                                                                                                      (induct-and-simplify
                                                                                                       A)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     types_matches)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       newintRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (1
                                                                                                        -1
                                                                                                        rel))
                                                                                                      (("1"
                                                                                                        (generalize
                                                                                                         "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                         A
                                                                                                         "IExpression")
                                                                                                        (("1"
                                                                                                          (induct-and-simplify
                                                                                                           A)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         types_matches)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           newrefRedex?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               unmark
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 translate_refs
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            -1
                                                                                                            rel))
                                                                                                          (("1"
                                                                                                            (generalize
                                                                                                             "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                                             A
                                                                                                             "IExpression")
                                                                                                            (("1"
                                                                                                              (induct-and-simplify
                                                                                                               A)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             types_matches)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace*)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               popRedex?)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (split
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       unmark
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         translate_refs
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       unmark
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         translate_refs
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (use
                                                                                                                           translate_refs_atom)
                                                                                                                          (("2"
                                                                                                                            (use
                                                                                                                             unmark_atom)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (1
                                                                                                                -1
                                                                                                                rel))
                                                                                                              (("1"
                                                                                                                (expand*
                                                                                                                 make_redex_typed
                                                                                                                 make_redex)
                                                                                                                (("1"
                                                                                                                  (generalize
                                                                                                                   "typed_to_topstate(rS)`state`redex"
                                                                                                                   "A"
                                                                                                                   "IExpression")
                                                                                                                  (("1"
                                                                                                                    (induct
                                                                                                                     A)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("4"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("5"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("6"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("7"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("8"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("9"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("10"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("11"
                                                                                                                      (skeep*)
                                                                                                                      (("11"
                                                                                                                        (expand
                                                                                                                         buildRedex
                                                                                                                         (-2
                                                                                                                          1
                                                                                                                          2))
                                                                                                                        (("11"
                                                                                                                          (case
                                                                                                                           "atom?(pop1_var)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("12"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("13"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             make_redex_typed)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "make_redex(typed_to_topstate(rS)`state)")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 pureRedex?)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("6"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("7"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("8"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("9"
                                                                                                                    (expand
                                                                                                                     pureReleaseRedex?)
                                                                                                                    (("9"
                                                                                                                      (expand
                                                                                                                       make_redex)
                                                                                                                      (("9"
                                                                                                                        (rewrite
                                                                                                                         top_releases_build_redex
                                                                                                                         :dir
                                                                                                                         RL)
                                                                                                                        (("9"
                                                                                                                          (expand*
                                                                                                                           typed_to_topstate
                                                                                                                           to_topstate)
                                                                                                                          (("9"
                                                                                                                            (rewrite
                                                                                                                             top_releases_ct_fill)
                                                                                                                            (("9"
                                                                                                                              (flatten)
                                                                                                                              (("9"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (delete
                                                                         obj)
                                                                        (("2"
                                                                          (expand
                                                                           make_redex_typed
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             make_redex
                                                                             -1)
                                                                            (("2"
                                                                              (rewrite
                                                                               top_releases_build_redex
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand*
                                                                                 typed_to_topstate
                                                                                 to_topstate)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   top_releases_ct_fill)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil
                                                            nil)
                                                           ("5"
                                                            (expand*
                                                             typed_to_topstate
                                                             to_topstate)
                                                            nil
                                                            nil)
                                                           ("6"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("6"
                                                              (expand
                                                               make_redex
                                                               -1)
                                                              (("6"
                                                                (rewrite
                                                                 top_releases_build_redex
                                                                 :dir
                                                                 RL)
                                                                (("6"
                                                                  (expand
                                                                   typed_to_topstate
                                                                   -1)
                                                                  (("6"
                                                                    (expand
                                                                     to_topstate
                                                                     -1)
                                                                    (("6"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("6"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("7"
                                                            (expand
                                                             state_matches?)
                                                            (("7"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("7"
                                                                (expand
                                                                 state_matches)
                                                                (("7"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                                                                    typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-9 "" 3703508479
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                                         state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                                      (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               state_matches?)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (expand
                                                                   state_matches
                                                                   -2)
                                                                  (("1"
                                                                    (with-labels
                                                                     (flatten)
                                                                     ((err
                                                                       trr
                                                                       unm
                                                                       stam
                                                                       stom)))
                                                                    (("1"
                                                                      (with-labels
                                                                       (case
                                                                        "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                                                       ((rel)))
                                                                      (("1"
                                                                        (expand
                                                                         "releaseRedex?"
                                                                         rel)
                                                                        (("1"
                                                                          (case
                                                                           "pureLetRedex?(make_redex_typed
                                                                                                                                       (typed_to_topstate(rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "pureLetRedex?(make_redex_typed
                                                                                                                                               (typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (replace*)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("2"
                                                                                  (expand
                                                                                   pureLetRedex?)
                                                                                  (("2"
                                                                                    (expand
                                                                                     letRedex?)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         +)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "pureLetRedex?(make_redex_typed
                                                                                                                                               (typed_to_topstate(tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                      (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       applyRedex?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (1
                                                                                        -1
                                                                                        rel))
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         A
                                                                                         "make_redex_typed(typed_to_topstate(rS))`state`redex"
                                                                                         "IExpression")
                                                                                        (("1"
                                                                                          (induct-and-simplify
                                                                                           A)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                      (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                              (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (replace*)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               ift_condtion_match)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                                 "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   -1)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand*
                                                                                                   make_redex_typed
                                                                                                   typed_to_topstate
                                                                                                   make_redex
                                                                                                   to_topstate)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand*
                                                                                                   make_redex_typed
                                                                                                   typed_to_topstate
                                                                                                   make_redex_e
                                                                                                   to_topstate)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand*
                                                                                           pureIftRedex?
                                                                                           iftRedex?)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                              (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                       (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                          (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand
                                                                                               updateRedex?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                          (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   lookupRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     types_matches)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       newintRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("1"
                                                                                                    (postpone)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         types_matches)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           newrefRedex?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("1"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             types_matches)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace*)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             trr
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               popRedex?)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                                                                          (tS))`state`redex)")
                                                                                                        (("1"
                                                                                                          (delete
                                                                                                           obj)
                                                                                                          (("1"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             make_redex_typed)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "make_redex(typed_to_topstate(rS)`state)")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 pureRedex?)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("6"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("7"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("8"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("9"
                                                                                                                    (expand
                                                                                                                     pureReleaseRedex?)
                                                                                                                    (("9"
                                                                                                                      (expand
                                                                                                                       make_redex)
                                                                                                                      (("9"
                                                                                                                        (rewrite
                                                                                                                         top_releases_build_redex
                                                                                                                         :dir
                                                                                                                         RL)
                                                                                                                        (("9"
                                                                                                                          (expand*
                                                                                                                           typed_to_topstate
                                                                                                                           to_topstate)
                                                                                                                          (("9"
                                                                                                                            (rewrite
                                                                                                                             top_releases_ct_fill)
                                                                                                                            (("9"
                                                                                                                              (flatten)
                                                                                                                              (("9"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("4"
                                                              (expand
                                                               typed_to_topstate
                                                               -1)
                                                              (("4"
                                                                (expand
                                                                 make_redex
                                                                 -1)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_build_redex
                                                                   -1
                                                                   :dir
                                                                   RL)
                                                                  (("4"
                                                                    (expand
                                                                     to_topstate)
                                                                    (("4"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("5"
                                                                (expand
                                                                 state_matches
                                                                 1)
                                                                (("5"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                                                                    typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-8 "" 3703448161
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                              state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                           (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               state_matches?)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (expand
                                                                   state_matches
                                                                   -2)
                                                                  (("1"
                                                                    (with-labels
                                                                     (flatten)
                                                                     ((err
                                                                       trr
                                                                       unm
                                                                       stam
                                                                       stom)))
                                                                    (("1"
                                                                      (case
                                                                       "pureLetRedex?(make_redex_typed
                                                                                                              (typed_to_topstate(rS))`state`redex)")
                                                                      (("1"
                                                                        (case
                                                                         "pureLetRedex?(make_redex_typed
                                                                                                                    (typed_to_topstate(tS))`state`redex)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             types_matches)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace*)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (delete
                                                                           obj)
                                                                          (("2"
                                                                            (replace
                                                                             trr
                                                                             :dir
                                                                             RL)
                                                                            (("2"
                                                                              (expand
                                                                               pureLetRedex?)
                                                                              (("2"
                                                                                (expand
                                                                                 letRedex?)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        (("2"
                                                                                          (use
                                                                                           translate_refs_atom)
                                                                                          (("2"
                                                                                            (use
                                                                                             unmark_atom)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        (("3"
                                                                                          (use
                                                                                           translate_refs_pure)
                                                                                          (("3"
                                                                                            (use
                                                                                             unmark_pure)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "pureLetRedex?(make_redex_typed
                                                                                                                    (typed_to_topstate(tS))`state`redex)")
                                                                        (("1"
                                                                          (delete
                                                                           obj)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                         (rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                               (tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("2"
                                                                                  (expand
                                                                                   applyRedex?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       (unmark
                                                                                        translate_refs)
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                               (tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("1"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                     (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                           (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (replace*)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           ift_condtion_match)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                             "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               -1)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand*
                                                                                               make_redex_typed
                                                                                               typed_to_topstate
                                                                                               make_redex
                                                                                               to_topstate)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (expand*
                                                                                               make_redex_typed
                                                                                               typed_to_topstate
                                                                                               make_redex_e
                                                                                               to_topstate)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       pureIftRedex?
                                                                                       iftRedex?)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               (unmark
                                                                                                translate_refs)
                                                                                               1)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("3"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                           (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                       (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                        (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           updateRedex?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                        (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                              (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                    (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand
                                                                                               lookupRedex?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   unmark
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     translate_refs
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                    (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                          (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   newintRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                      (rS))`state`redex)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                            (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     types_matches)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       newrefRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                            (tS))`state`redex)")
                                                                                                (("1"
                                                                                                  (delete
                                                                                                   obj)
                                                                                                  (("1"
                                                                                                    (postpone)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                  (rS))`state`redex)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                        (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         types_matches)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (replace*)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           popRedex?)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (split
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       translate_refs_atom)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         unmark_atom)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                                                                        (tS))`state`redex)")
                                                                                                    (("1"
                                                                                                      (delete
                                                                                                       obj)
                                                                                                      (("1"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         make_redex_typed)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "make_redex(typed_to_topstate(rS)`state)")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             pureRedex?)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("5"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("6"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("7"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("8"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("9"
                                                                                                                (expand
                                                                                                                 pureReleaseRedex?)
                                                                                                                (("9"
                                                                                                                  (expand
                                                                                                                   make_redex)
                                                                                                                  (("9"
                                                                                                                    (rewrite
                                                                                                                     top_releases_build_redex
                                                                                                                     :dir
                                                                                                                     RL)
                                                                                                                    (("9"
                                                                                                                      (expand*
                                                                                                                       typed_to_topstate
                                                                                                                       to_topstate)
                                                                                                                      (("9"
                                                                                                                        (rewrite
                                                                                                                         top_releases_ct_fill)
                                                                                                                        (("9"
                                                                                                                          (flatten)
                                                                                                                          (("9"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("4"
                                                              (expand
                                                               typed_to_topstate
                                                               -1)
                                                              (("4"
                                                                (expand
                                                                 make_redex
                                                                 -1)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_build_redex
                                                                   -1
                                                                   :dir
                                                                   RL)
                                                                  (("4"
                                                                    (expand
                                                                     to_topstate)
                                                                    (("4"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("5"
                                                                (expand
                                                                 state_matches
                                                                 1)
                                                                (("5"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                                                typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-7 "" 3703430148
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                                   state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                                (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (case
                                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                                              (("1"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("1"
                                                                  (expand
                                                                   typed_to_topstate)
                                                                  (("1"
                                                                    (generalize
                                                                     "to_topstate(rS`state)`redex"
                                                                     A
                                                                     "IExpression")
                                                                    (("1"
                                                                      (induct-and-simplify
                                                                       A)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 to_topstate)
                                                                (("2"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches?(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "pureLetRedex?(make_redex_typed
                                                                                     (typed_to_topstate(rS))`state`redex)")
                                                              (("1"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                                                         (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     types_matches)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (replace*)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (delete
                                                                   obj)
                                                                  (("2"
                                                                    (expand
                                                                     state_matches?)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (expand
                                                                         state_matches
                                                                         -3)
                                                                        (("2"
                                                                          (with-labels
                                                                           (flatten)
                                                                           ((err
                                                                             trr
                                                                             unm
                                                                             stam
                                                                             stom)))
                                                                          (("2"
                                                                            (replace
                                                                             trr
                                                                             :dir
                                                                             RL)
                                                                            (("2"
                                                                              (expand
                                                                               pureLetRedex?)
                                                                              (("2"
                                                                                (expand
                                                                                 letRedex?)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        (("2"
                                                                                          (use
                                                                                           translate_refs_atom)
                                                                                          (("2"
                                                                                            (use
                                                                                             unmark_atom)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (expand*
                                                                                         unmark
                                                                                         translate_refs
                                                                                         +)
                                                                                        (("3"
                                                                                          (use
                                                                                           translate_refs_pure)
                                                                                          (("3"
                                                                                            (use
                                                                                             unmark_pure)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                                                         (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (delete
                                                                   obj)
                                                                  (("1"
                                                                    (expand
                                                                     state_matches?)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (expand
                                                                         state_matches
                                                                         -3)
                                                                        (("1"
                                                                          (with-labels
                                                                           (flatten)
                                                                           ((err
                                                                             trr
                                                                             unm
                                                                             stam
                                                                             stom)))
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (case
                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                            (rS))`state`redex)")
                                                                  (("1"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                (tS))`state`redex)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         types_matches)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (delete
                                                                       obj)
                                                                      (("2"
                                                                        (expand
                                                                         state_matches?)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (expand
                                                                             state_matches
                                                                             -3)
                                                                            (("2"
                                                                              (with-labels
                                                                               (flatten)
                                                                               ((err
                                                                                 trr
                                                                                 unm
                                                                                 stam
                                                                                 stom)))
                                                                              (("2"
                                                                                (replace
                                                                                 trr
                                                                                 :dir
                                                                                 RL)
                                                                                (("2"
                                                                                  (expand
                                                                                   applyRedex?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       (unmark
                                                                                        translate_refs)
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                                                (tS))`state`redex)")
                                                                    (("1"
                                                                      (delete
                                                                       obj)
                                                                      (("1"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                    (rS))`state`redex)")
                                                                      (("1"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                        (tS))`state`redex)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             types_matches)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace*)
                                                                                (("1"
                                                                                  (lemma
                                                                                   ift_condtion_match)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                     "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -1)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex
                                                                                       to_topstate)
                                                                                      nil
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex_e
                                                                                       to_topstate)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (delete
                                                                           obj)
                                                                          (("2"
                                                                            (expand
                                                                             state_matches?)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (expand
                                                                                 state_matches
                                                                                 -3)
                                                                                (("2"
                                                                                  (with-labels
                                                                                   (flatten)
                                                                                   ((err
                                                                                     trr
                                                                                     unm
                                                                                     stam
                                                                                     stom)))
                                                                                  (("2"
                                                                                    (replace
                                                                                     trr
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand*
                                                                                       pureIftRedex?
                                                                                       iftRedex?)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand*
                                                                                               (unmark
                                                                                                translate_refs)
                                                                                               1)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   translate_refs_pure)
                                                                                                  (("3"
                                                                                                    (use
                                                                                                     unmark_pure)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                                                        (tS))`state`redex)")
                                                                        (("1"
                                                                          (delete
                                                                           obj)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                       (rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                      (tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (expand
                                                                                 state_matches?)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     state_matches
                                                                                     -3)
                                                                                    (("2"
                                                                                      (with-labels
                                                                                       (flatten)
                                                                                       ((err
                                                                                         trr
                                                                                         unm
                                                                                         stam
                                                                                         stom)))
                                                                                      (("2"
                                                                                        (replace
                                                                                         trr
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           updateRedex?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               unmark
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 translate_refs
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                                                      (tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                          (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (expand
                                                                                     state_matches?)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (expand
                                                                                         state_matches
                                                                                         -3)
                                                                                        (("2"
                                                                                          (with-labels
                                                                                           (flatten)
                                                                                           ((err
                                                                                             trr
                                                                                             unm
                                                                                             stam
                                                                                             stom)))
                                                                                          (("2"
                                                                                            (replace
                                                                                             trr
                                                                                             :dir
                                                                                             RL)
                                                                                            (("2"
                                                                                              (expand
                                                                                               lookupRedex?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   unmark
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     translate_refs
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                                                              (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                  (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                      (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (expand
                                                                                         state_matches?)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (expand
                                                                                             state_matches
                                                                                             -3)
                                                                                            (("2"
                                                                                              (with-labels
                                                                                               (flatten)
                                                                                               ((err
                                                                                                 trr
                                                                                                 unm
                                                                                                 stam
                                                                                                 stom)))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 trr
                                                                                                 :dir
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   newintRedex?)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       unmark
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         translate_refs
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                      (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                          (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (expand
                                                                                             state_matches?)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 state_matches
                                                                                                 -3)
                                                                                                (("2"
                                                                                                  (with-labels
                                                                                                   (flatten)
                                                                                                   ((err
                                                                                                     trr
                                                                                                     unm
                                                                                                     stam
                                                                                                     stom)))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     trr
                                                                                                     :dir
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       newrefRedex?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unmark
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             translate_refs
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                              (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                  (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                      (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (replace*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 state_matches?)
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     state_matches
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (with-labels
                                                                                                       (flatten)
                                                                                                       ((err
                                                                                                         trr
                                                                                                         unm
                                                                                                         stam
                                                                                                         stom)))
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         trr
                                                                                                         :dir
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           popRedex?)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (split
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   unmark
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     translate_refs
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       translate_refs_atom)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         unmark_atom)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                                                                      (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 make_redex_typed)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "make_redex(typed_to_topstate(rS)`state)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     pureRedex?)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("5"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("6"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("7"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("8"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("9"
                                                                                                        (expand
                                                                                                         pureReleaseRedex?)
                                                                                                        (("9"
                                                                                                          (expand
                                                                                                           make_redex)
                                                                                                          (("9"
                                                                                                            (rewrite
                                                                                                             top_releases_build_redex
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("9"
                                                                                                              (expand*
                                                                                                               typed_to_topstate
                                                                                                               to_topstate)
                                                                                                              (("9"
                                                                                                                (rewrite
                                                                                                                 top_releases_ct_fill)
                                                                                                                (("9"
                                                                                                                  (flatten)
                                                                                                                  (("9"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         make_redex_types_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex_typed
                                                             -1)
                                                            (("4"
                                                              (expand
                                                               typed_to_topstate
                                                               -1)
                                                              (("4"
                                                                (expand
                                                                 make_redex
                                                                 -1)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_build_redex
                                                                   -1
                                                                   :dir
                                                                   RL)
                                                                  (("4"
                                                                    (expand
                                                                     to_topstate)
                                                                    (("4"
                                                                      (rewrite
                                                                       top_releases_ct_fill)
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst
                                                               1
                                                               translate)
                                                              (("5"
                                                                (expand
                                                                 state_matches
                                                                 1)
                                                                (("5"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             make_redex)
                                                            (("4"
                                                              (rewrite
                                                               top_releases_build_redex
                                                               :dir
                                                               RL)
                                                              (("4"
                                                                (expand
                                                                 to_topstate)
                                                                (("4"
                                                                  (rewrite
                                                                   top_releases_ct_fill)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                                            typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-6 "" 3703429366
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                        state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                     (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (postpone)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "state_matches(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)(translate)")
                                                    (("1"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -4)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "pureLetRedex?(make_redex_typed
                                                            (typed_to_topstate(rS))`state`redex)")
                                                              (("1"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                              (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     types_matches)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (replace*)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (delete
                                                                   obj)
                                                                  (("2"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                              (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (delete
                                                                   obj)
                                                                  (("1"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (case
                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                                               (rS))`state`redex)")
                                                                  (("1"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                 (tS))`state`redex)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         types_matches)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (delete
                                                                       obj)
                                                                      (("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                 (tS))`state`redex)")
                                                                    (("1"
                                                                      (delete
                                                                       obj)
                                                                      (("1"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                   (rS))`state`redex)")
                                                                      (("1"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                     (tS))`state`redex)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             types_matches)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace*)
                                                                                (("1"
                                                                                  (lemma
                                                                                   ift_condtion_match)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                     "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         state_matches?)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex
                                                                                       to_topstate)
                                                                                      nil
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex_e
                                                                                       to_topstate)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (delete
                                                                           obj)
                                                                          (("2"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                     (tS))`state`redex)")
                                                                        (("1"
                                                                          (delete
                                                                           obj)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                       (rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                    (tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                    (tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                      (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                        (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                        (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (postpone)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                          (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                            (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                            (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                              (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                  (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                    (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (replace*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                    (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 make_redex_typed)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "make_redex(typed_to_topstate(rS)`state)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     pureRedex?)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("5"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("6"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("7"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("8"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("9"
                                                                                                        (expand
                                                                                                         pureReleaseRedex?)
                                                                                                        (("9"
                                                                                                          (expand
                                                                                                           make_redex)
                                                                                                          (("9"
                                                                                                            (rewrite
                                                                                                             top_releases_build_redex
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("9"
                                                                                                              (expand*
                                                                                                               typed_to_topstate
                                                                                                               to_topstate)
                                                                                                              (("9"
                                                                                                                (rewrite
                                                                                                                 top_releases_ct_fill)
                                                                                                                (("9"
                                                                                                                  (flatten)
                                                                                                                  (("9"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       make_redex_typed
                                                       typed_to_topstate)
                                                      (("2"
                                                        (use
                                                         make_redex_match)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (postpone)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (postpone)
                                                            nil
                                                            nil)
                                                           ("5"
                                                            (expand
                                                             state_matches?)
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                        typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-5 "" 3703429033
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
                        state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                                     (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil)))
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil)))))))
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (postpone)
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil)))))))))))))))))))
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil)))))))))))
                                                   ("2"
                                                    (case
                                                     "state_matches(make_redex_typed(typed_to_topstate(tS))`state, make_redex_typed(typed_to_topstate(rS))`state)(translate)")
                                                    (("2"
                                                      (case
                                                       "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                      (("1"
                                                        (delete -3)
                                                        (("1"
                                                          (expand
                                                           typed_reduce)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "pureLetRedex?(make_redex_typed
                                                            (typed_to_topstate(rS))`state`redex)")
                                                              (("1"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                              (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     types_matches)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (replace*)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (delete
                                                                   obj)
                                                                  (("2"
                                                                    (postpone)
                                                                    nil)))))
                                                               ("2"
                                                                (case
                                                                 "pureLetRedex?(make_redex_typed
                                                              (typed_to_topstate(tS))`state`redex)")
                                                                (("1"
                                                                  (delete
                                                                   obj)
                                                                  (("1"
                                                                    (postpone)
                                                                    nil)))
                                                                 ("2"
                                                                  (case
                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                                               (rS))`state`redex)")
                                                                  (("1"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                 (tS))`state`redex)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         types_matches)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil)))))))
                                                                     ("2"
                                                                      (delete
                                                                       obj)
                                                                      (("2"
                                                                        (postpone)
                                                                        nil)))))
                                                                   ("2"
                                                                    (case
                                                                     "applyRedex?(make_redex_typed(typed_to_topstate
                                                                                 (tS))`state`redex)")
                                                                    (("1"
                                                                      (delete
                                                                       obj)
                                                                      (("1"
                                                                        (postpone)
                                                                        nil)))
                                                                     ("2"
                                                                      (case
                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                   (rS))`state`redex)")
                                                                      (("1"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                     (tS))`state`redex)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             types_matches)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (replace*)
                                                                                (("1"
                                                                                  (lemma
                                                                                   ift_condtion_match)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                     "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         state_matches?)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex
                                                                                       to_topstate)
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand*
                                                                                       make_redex_typed
                                                                                       typed_to_topstate
                                                                                       make_redex_e
                                                                                       to_topstate)
                                                                                      nil)))))))))))))
                                                                         ("2"
                                                                          (delete
                                                                           obj)
                                                                          (("2"
                                                                            (postpone)
                                                                            nil)))))
                                                                       ("2"
                                                                        (case
                                                                         "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                                                     (tS))`state`redex)")
                                                                        (("1"
                                                                          (delete
                                                                           obj)
                                                                          (("1"
                                                                            (postpone)
                                                                            nil)))
                                                                         ("2"
                                                                          (case
                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                       (rS))`state`redex)")
                                                                          (("1"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                    (tS))`state`redex)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 types_matches)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil)))))
                                                                             ("2"
                                                                              (delete
                                                                               obj)
                                                                              (("2"
                                                                                (postpone)
                                                                                nil)))))
                                                                           ("2"
                                                                            (case
                                                                             "updateRedex?(make_redex_typed(typed_to_topstate
                                                                                    (tS))`state`redex)")
                                                                            (("1"
                                                                              (delete
                                                                               obj)
                                                                              (("1"
                                                                                (postpone)
                                                                                nil)))
                                                                             ("2"
                                                                              (case
                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                      (rS))`state`redex)")
                                                                              (("1"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                        (tS))`state`redex)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     types_matches)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil)))))
                                                                                 ("2"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("2"
                                                                                    (postpone)
                                                                                    nil)))))
                                                                               ("2"
                                                                                (case
                                                                                 "lookupRedex?(make_redex_typed(typed_to_topstate
                                                                                        (tS))`state`redex)")
                                                                                (("1"
                                                                                  (delete
                                                                                   obj)
                                                                                  (("1"
                                                                                    (postpone)
                                                                                    nil)))
                                                                                 ("2"
                                                                                  (case
                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                          (rS))`state`redex)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                            (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         types_matches)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))))
                                                                                     ("2"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("2"
                                                                                        (postpone)
                                                                                        nil)))))
                                                                                   ("2"
                                                                                    (case
                                                                                     "newintRedex?(make_redex_typed(typed_to_topstate
                                                                                            (tS))`state`redex)")
                                                                                    (("1"
                                                                                      (delete
                                                                                       obj)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (case
                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                              (rS))`state`redex)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             types_matches)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)))))
                                                                                         ("2"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("2"
                                                                                            (postpone)
                                                                                            nil)))))
                                                                                       ("2"
                                                                                        (case
                                                                                         "newrefRedex?(make_redex_typed(typed_to_topstate
                                                                                                (tS))`state`redex)")
                                                                                        (("1"
                                                                                          (delete
                                                                                           obj)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil)))
                                                                                         ("2"
                                                                                          (case
                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                  (rS))`state`redex)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                    (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 types_matches)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (replace*)
                                                                                                    nil)))))))
                                                                                             ("2"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("2"
                                                                                                (postpone)
                                                                                                nil)))))
                                                                                           ("2"
                                                                                            (case
                                                                                             "popRedex?(make_redex_typed(typed_to_topstate
                                                                                                    (tS))`state`redex)")
                                                                                            (("1"
                                                                                              (delete
                                                                                               obj)
                                                                                              (("1"
                                                                                                (postpone)
                                                                                                nil)))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 make_redex_typed)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "make_redex(typed_to_topstate(rS)`state)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     pureRedex?)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("4"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("5"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("6"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("7"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("8"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("9"
                                                                                                        (expand
                                                                                                         pureReleaseRedex?)
                                                                                                        (("9"
                                                                                                          (expand
                                                                                                           make_redex)
                                                                                                          (("9"
                                                                                                            (rewrite
                                                                                                             top_releases_build_redex
                                                                                                             :dir
                                                                                                             RL)
                                                                                                            (("9"
                                                                                                              (expand*
                                                                                                               typed_to_topstate
                                                                                                               to_topstate)
                                                                                                              (("9"
                                                                                                                (rewrite
                                                                                                                 top_releases_ct_fill)
                                                                                                                (("9"
                                                                                                                  (flatten)
                                                                                                                  (("9"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                       ("2"
                                                        (postpone)
                                                        nil)
                                                       ("3"
                                                        (split)
                                                        (("1"
                                                          (expand
                                                           typed_to_topstate)
                                                          (("1"
                                                            (expand
                                                             to_topstate)
                                                            (("1"
                                                              (propax)
                                                              nil)))))
                                                         ("2"
                                                          (propax)
                                                          nil)))
                                                       ("4"
                                                        (split)
                                                        (("1"
                                                          (expand*
                                                           typed_to_topstate
                                                           to_topstate)
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil)))))))))))))
                                             ("2"
                                              (expand types_matches)
                                              (("2"
                                                (propax)
                                                nil)))))))))))))))))
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil)))
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil)))))))))
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil)))
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil)))
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil)))
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil)))))))))))))
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil)))))))))
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3"
                                    (replace*)
                                    nil)))))))))))))))))))))))
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil)))))))
                   ("2" (propax) nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1" (assert) (("1" (grind) nil)))))
                             ("2" (grind) nil)))))))))))
                   ("4" (propax) nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                                        typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil)))))))))
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil)))))))))))
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil)))))))))))))))))))
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil)))))
                                                 ("2" (propax) nil)))))
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil)))
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil)))))))))))))
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil)))
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil)))
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil)))
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil)))))
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil)))))))))))
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil)))))))))))))))))
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil)))))))))
               ("2" (split)
                (("1" (propax) nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten)
                        (("2" (replace*) nil)))))))))))))))))))))
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil)))))))))))
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil)))))))))))
     ("4" (split) (("1" (propax) nil) ("2" (propax) nil))))
    nil)
   nil nil)
  (bisimulation_lemma-4 "" 3703422987
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (expand state_matches?)
                      (("1" (skeep)
                        (("1" (expand state_matches)
                          (("1" (rewrite typed_reduce_state)
                            (("1"
                              (case "exists (translate):
             state_matches(reduce(D)(tS`state), typed_reduce(D)(rS)`state)
                          (translate)")
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "translate!1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (case
                                       "types_matches(typed_reduce(D)(tS), typed_reduce(D)(rS))")
                                      (("1"
                                        (expand types_matches)
                                        (("1" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (delete obj)
                                        (("2"
                                          (label obj 1)
                                          (("2"
                                            (case
                                             "types_matches(typed_to_topstate(tS), typed_to_topstate(rS))")
                                            (("1"
                                              (delete -6 -7 -8 -9)
                                              (("1"
                                                (case
                                                 "atom?(typed_to_topstate(tS)`state`redex)")
                                                (("1"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (delete -4)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (delete -3)
                                                    (("2"
                                                      (expand
                                                       state_matches)
                                                      (("2"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("2"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("2"
                                                            (case
                                                             "atom?(unmark(typed_to_topstate(rS)`state`redex))")
                                                            (("1"
                                                              (postpone)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (name-replace
                                                               A
                                                               "unmark(typed_to_topstate(rS)`state`redex)")
                                                              (("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1))
                                                                (("2"
                                                                  (generalize
                                                                   A
                                                                   A
                                                                   "IExpression")
                                                                  (("2"
                                                                    (induct-and-simplify
                                                                     A)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case
                                                   "atom?(typed_to_topstate(rS)`state`redex)")
                                                  (("1"
                                                    (delete -3)
                                                    (("1"
                                                      (expand
                                                       state_matches)
                                                      (("1"
                                                        (with-labels
                                                         (flatten)
                                                         ((err
                                                           trr
                                                           unm
                                                           stam
                                                           stom)))
                                                        (("1"
                                                          (replace
                                                           trr
                                                           :dir
                                                           RL)
                                                          (("1"
                                                            (rewrite
                                                             translate_refs_atom)
                                                            (("1"
                                                              (rewrite
                                                               unmark_atom)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "types_matches(make_redex_typed(typed_to_topstate(tS)), make_redex_typed(typed_to_topstate(rS)))")
                                                    (("1"
                                                      (delete -3)
                                                      (("1"
                                                        (expand
                                                         typed_reduce)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "pureLetRedex?(make_redex_typed
                                     (typed_to_topstate(rS))`state`redex)")
                                                            (("1"
                                                              (case
                                                               "pureLetRedex?(make_redex_typed
                                     (typed_to_topstate(tS))`state`redex)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   types_matches)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (replace*)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (delete
                                                                 obj)
                                                                (("2"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "pureLetRedex?(make_redex_typed
                                     (typed_to_topstate(tS))`state`redex)")
                                                              (("1"
                                                                (delete
                                                                 obj)
                                                                (("1"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "applyRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                (("1"
                                                                  (case
                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       types_matches)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (delete
                                                                     obj)
                                                                    (("2"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (case
                                                                   "applyRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                  (("1"
                                                                    (delete
                                                                     obj)
                                                                    (("1"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                    (("1"
                                                                      (case
                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           types_matches)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (replace*)
                                                                              (("1"
                                                                                (lemma
                                                                                 ift_condtion_match)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "make_redex_typed(typed_to_topstate(tS))`state"
                                                                                   "make_redex_typed(typed_to_topstate(rS))`state")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       state_matches?)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand*
                                                                                     make_redex_typed
                                                                                     typed_to_topstate
                                                                                     make_redex
                                                                                     to_topstate)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (expand*
                                                                                     make_redex_typed
                                                                                     typed_to_topstate
                                                                                     make_redex_e
                                                                                     to_topstate)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (delete
                                                                         obj)
                                                                        (("2"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case
                                                                       "pureIftRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                      (("1"
                                                                        (delete
                                                                         obj)
                                                                        (("1"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (case
                                                                         "updateRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                        (("1"
                                                                          (case
                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               types_matches)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (delete
                                                                             obj)
                                                                            (("2"
                                                                              (postpone)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "updateRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                          (("1"
                                                                            (delete
                                                                             obj)
                                                                            (("1"
                                                                              (postpone)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "lookupRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                            (("1"
                                                                              (case
                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   types_matches)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (delete
                                                                                 obj)
                                                                                (("2"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "lookupRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                              (("1"
                                                                                (delete
                                                                                 obj)
                                                                                (("1"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "newintRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                                (("1"
                                                                                  (case
                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       types_matches)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (delete
                                                                                     obj)
                                                                                    (("2"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "newintRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                  (("1"
                                                                                    (delete
                                                                                     obj)
                                                                                    (("1"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case
                                                                                     "newrefRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           types_matches)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (delete
                                                                                         obj)
                                                                                        (("2"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "newrefRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                      (("1"
                                                                                        (delete
                                                                                         obj)
                                                                                        (("1"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "popRedex?(make_redex_typed(typed_to_topstate
                                                    (rS))`state`redex)")
                                                                                        (("1"
                                                                                          (case
                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               types_matches)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (replace*)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (delete
                                                                                             obj)
                                                                                            (("2"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "popRedex?(make_redex_typed(typed_to_topstate
                                                    (tS))`state`redex)")
                                                                                          (("1"
                                                                                            (delete
                                                                                             obj)
                                                                                            (("1"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               make_redex_typed)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "make_redex(typed_to_topstate(rS)`state)")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   pureRedex?)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("5"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("6"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("7"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("8"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("9"
                                                                                                      (expand
                                                                                                       pureReleaseRedex?)
                                                                                                      (("9"
                                                                                                        (expand
                                                                                                         make_redex)
                                                                                                        (("9"
                                                                                                          (rewrite
                                                                                                           top_releases_build_redex
                                                                                                           :dir
                                                                                                           RL)
                                                                                                          (("9"
                                                                                                            (expand*
                                                                                                             typed_to_topstate
                                                                                                             to_topstate)
                                                                                                            (("9"
                                                                                                              (rewrite
                                                                                                               top_releases_ct_fill)
                                                                                                              (("9"
                                                                                                                (flatten)
                                                                                                                (("9"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (postpone)
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (split)
                                                      (("1"
                                                        (expand
                                                         typed_to_topstate)
                                                        (("1"
                                                          (expand
                                                           to_topstate)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (split)
                                                      (("1"
                                                        (expand*
                                                         typed_to_topstate
                                                         to_topstate)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand types_matches)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (delete obj)
                                  (("2"
                                    (case
                                     "state_matches?(reduce(D)(tS`state), typed_reduce(D)(rS)`state)")
                                    (("1"
                                      (expand state_matches?)
                                      (("1" (propax) nil nil))
                                      nil)
                                     ("2"
                                      (delete 2)
                                      (("2"
                                        (use bisimulation_lemma)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (rewrite
                                             typed_reduce_state)
                                            (("1"
                                              (replace -2)
                                              (("1"
                                                (expand rreduce_n)
                                                (("1"
                                                  (expand rreduce_n)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "rS`state")
                                            (("2" (propax) nil nil))
                                            nil)
                                           ("3"
                                            (typepred "rS`state")
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (typepred "rS`state")
                                            (("4" (propax) nil nil))
                                            nil)
                                           ("5"
                                            (expand state_matches?)
                                            (("5"
                                              (inst?)
                                              (("5"
                                                (expand
                                                 typed_to_topstate)
                                                (("5"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand typed_to_topstate)
                                      (("3" (replace*) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (flatten)
                                (("3"
                                  (expand typed_to_topstate)
                                  (("3" (replace*) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "NOT atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand*
                                                       pureLetRedex?
                                                       letRedex?
                                                       applyRedex?
                                                       pureIftRedex?
                                                       iftRedex?
                                                       updateRedex?
                                                       lookupRedex?
                                                       newintRedex?
                                                       newrefRedex?
                                                       popRedex?)
                                                      (("1"
                                                        (split hrec)
                                                        (("1"
                                                          (expand
                                                           make_redex_typed)
                                                          (("1"
                                                            (typepred
                                                             "buildRedexType(typed_to_topstate(rS)`state`redex,
                                    typed_to_topstate(rS)`redex_type)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 typed_to_topstate)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (expand*
                                                           make_redex_typed
                                                           typed_to_topstate)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "top_releases_ct(to_topstate(rS`state)`redex) = 0")
                                              (("1"
                                                (expand to_topstate)
                                                (("1"
                                                  (rewrite
                                                   top_releases_ct_fill)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 typed_to_topstate)
                                                (("2"
                                                  (hide-all-but (1 -1))
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil nil)
  (bisimulation_lemma-3 "" 3703364110
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (label hrec -1)
      (("1" (with-labels (skeep* +) ((err1 err2 dwt stm obj)))
        (("1" (name-replace rS "x!1")
          (("1" (case-replace "top_releases_ct(rS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n +)
                (("1" (assert)
                  (("1" (expand typed_reduce_n)
                    (("1" (postpone) nil nil)) nil))
                  nil))
                nil))
              nil)
             ("2" (inst hrec "typed_reduce(D)(rS)")
              (("1" (inst?)
                (("1" (split hrec)
                  (("1" (rewrite typed_reduce_state)
                    (("1" (rewrite top_releases_reduce)
                      (("1" (expand typed_reduce_n +)
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil)
                   ("3" (rewrite typed_reduce_state)
                    (("3" (rewrite top_release_reduce)
                      (("3" (expand releaseReduce)
                        (("3" (expand* decref make_redex)
                          (("3" (split hrec)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1" (grind) nil nil))
                                nil))
                              nil)
                             ("2" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("4" (propax) nil nil)
                   ("5" (expand state_matches?)
                    (("5" (skeep)
                      (("5" (inst?)
                        (("5" (delete obj)
                          (("5" (expand state_matches)
                            (("5" (expand typed_to_topstate hrec)
                              (("5"
                                (rewrite typed_reduce_state)
                                (("1"
                                  (rewrite top_release_reduce)
                                  (("1"
                                    (use releaseReduce_reduce_match)
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (with-labels
                                           (flatten)
                                           ((sstam rtm ctm sttm dtm)))
                                          (("1"
                                            (case
                                             "atom?(typed_to_topstate(rS)`state`redex)")
                                            (("1"
                                              (case
                                               "releaseRedex?(make_redex_typed(typed_to_topstate(rS))`state`redex)")
                                              (("1"
                                                (expand releaseRedex?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     typed_reduce)
                                                    (("1"
                                                      (expand
                                                       typed_to_topstate)
                                                      (("1"
                                                        (split)
                                                        (("1"
                                                          (expand
                                                           typeinfo_fill
                                                           +
                                                           2)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 make_redex_typed
                                                 +)
                                                (("2"
                                                  (expand make_redex +)
                                                  (("2"
                                                    (lemma
                                                     top_releases_build_redex)
                                                    (("2"
                                                      (inst? :where 1)
                                                      (("2"
                                                        (rewrite
                                                         -1
                                                         :dir
                                                         RL)
                                                        (("2"
                                                          (delete hrec)
                                                          (("2"
                                                            (expand
                                                             typed_to_topstate
                                                             +)
                                                            (("2"
                                                              (expand
                                                               to_topstate)
                                                              (("2"
                                                                (rewrite
                                                                 top_releases_ct_fill)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (postpone)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (name
                                               rS2
                                               "make_redex_typed(typed_to_topstate(rS))")
                                              (("1" (postpone) nil nil)
                                               ("2"
                                                (split)
                                                (("1"
                                                  (expand
                                                   typed_to_topstate)
                                                  (("1"
                                                    (expand
                                                     to_topstate)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "rS`state")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (typepred "rS`state")
                                        (("3" (propax) nil nil))
                                        nil)
                                       ("4"
                                        (typepred "rS`state")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (flatten)
                                        (("5"
                                          (expand typed_to_topstate)
                                          (("5" (propax) nil nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (delete hrec)
                                        (("6"
                                          (delete stm)
                                          (("6" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand typed_to_topstate)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("6" (rewrite typed_reduce_state)
                    (("6" (rewrite top_releases_reduce)
                      (("6" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (split)
                (("1" (propax) nil nil)
                 ("2" (expand state_matches? -)
                  (("2" (skeep)
                    (("2" (expand* state_matches typed_to_topstate)
                      (("2" (flatten) (("2" (replace*) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (delete 4 -4)
      (("2" (expand state_matches?)
        (("2" (skeep)
          (("2" (expand* state_matches typed_to_topstate)
            (("2" (flatten) (("2" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("3" (delete 4)
      (("3" (expand state_matches?)
        (("3" (skeep)
          (("3" (expand* state_matches typed_to_topstate)
            (("3" (flatten) (("3" (replace*) nil nil)) nil)) nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil shostak)
  (bisimulation_lemma-2 "" 3703355139
   ("" (skeep* :preds? t)
    ((""
      (case "state_matches?(typed_reduce(D)(tS)`state,
                     typed_reduce_n(D)
                                   (top_releases_ct(trS`state`redex) + 1,
                                    trS)`state)")
      (("1" (expand state_matches?)
        (("1" (skeep)
          (("1" (inst?)
            (("1" (expand state_matches +)
              (("1" (assert)
                (("1" (skeep)
                  (("1" (delete -1)
                    (("1" (expand state_matches)
                      (("1" (flatten)
                        (("1" (delete -2) (("1" (postpone) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   nil shostak)
  (bisimulation_lemma-1 nil 3703351556
   ("" (measure-induct+ "top_releases_ct(trS`state`redex)" ("trS"))
    (("1" (name-replace "trS" "x!1")
      (("1" (with-labels (skeep) ((err1 err2 dwt stm obj)))
        (("1" (label hrec -1)
          (("1" (case-replace "top_releases_ct(trS`state`redex) = 0")
            (("1" (delete hrec)
              (("1" (expand typed_reduce_n)
                (("1" (expand typed_reduce_n)
                  (("1" (assert) (("1" (postpone) nil nil)) nil)) nil))
                nil))
              nil)
             ("2" (expand typed_reduce_n obj)
              (("2" (assert)
                (("2" (inst hrec "typed_reduce(D)(trS)")
                  (("2" (inst hrec D tS)
                    (("2" (split hrec)
                      (("1" (rewrite typed_reduce_state)
                        (("1" (rewrite top_releases_reduce)
                          (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (propax) nil nil)
                       ("3" (rewrite typed_reduce_state)
                        (("3" (rewrite top_release_reduce)
                          (("3"
                            (case-replace
                             "releaseReduce(D)(make_redex(to_topstate(trS`state)))`error = trS`state`error")
                            (("3" (delete hrec)
                              (("3"
                                (expand releaseReduce)
                                (("3"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand decref)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand*
                                           make_redex
                                           to_topstate)
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (expand* make_redex to_topstate)
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("4" (propax) nil nil)
                       ("5" (delete obj)
                        (("5"
                          (case "state_matches?(to_topstate(tS`state), to_topstate(reduce(D)(trS`state)))")
                          (("1" (expand state_matches? -1)
                            (("1" (skeep)
                              (("1"
                                (expand state_matches? hrec)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (expand state_matches hrec)
                                    (("1"
                                      (split)
                                      (("1"
                                        (expand typed_to_topstate hrec)
                                        (("1"
                                          (rewrite typed_reduce_state)
                                          nil
                                          nil))
                                        nil)
                                       ("2" (postpone) nil nil)
                                       ("3" (postpone) nil nil)
                                       ("4" (postpone) nil nil)
                                       ("5" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (delete hrec)
                            (("2" (rewrite top_release_reduce)
                              (("2"
                                (name-replace
                                 "rS"
                                 "make_redex
                                               (to_topstate(trS`state))")
                                (("2" (postpone) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("6" (rewrite typed_reduce_state)
                        (("6" (rewrite top_releases_reduce)
                          (("6" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (postpone) nil nil)
     ("3" (expand state_matches? -)
      (("3" (skeep -)
        (("3" (expand state_matches)
          (("3" (flatten)
            (("3" (expand typed_to_topstate)
              (("3" (replace* -) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (split) (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   nil shostak)))

